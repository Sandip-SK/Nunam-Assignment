 12205 function calls (12093 primitive calls) in 1.895 seconds

   Ordered by: standard name

   ncalls  tottime  percall  cumtime  percall filename:lineno(function)
        4    0.000    0.000    0.000    0.000 <__array_function__ internals>:2(all)
       10    0.000    0.000    0.025    0.002 <__array_function__ internals>:2(concatenate)
        2    0.000    0.000    0.000    0.000 <__array_function__ internals>:2(copyto)
        1    0.000    0.000    0.000    0.000 <__array_function__ internals>:2(diff)
        2    0.000    0.000    0.000    0.000 <__array_function__ internals>:2(empty_like)
        2    0.000    0.000    0.001    0.000 <__array_function__ internals>:2(isclose)
        2    0.000    0.000    0.000    0.000 <__array_function__ internals>:2(min_scalar_type)
        2    0.000    0.000    0.000    0.000 <__array_function__ internals>:2(ndim)
        1    0.000    0.000    0.005    0.005 <__array_function__ internals>:2(repeat)
        2    0.000    0.000    0.000    0.000 <__array_function__ internals>:2(result_type)
        2    0.000    0.000    0.000    0.000 <__array_function__ internals>:2(sort)
        2    0.000    0.000    0.000    0.000 <__array_function__ internals>:2(zeros_like)
       23    0.000    0.000    0.000    0.000 <frozen importlib._bootstrap>:1017(_handle_fromlist)
        1    0.000    0.000    0.000    0.000 <frozen importlib._bootstrap>:103(release)
        1    0.000    0.000    0.000    0.000 <frozen importlib._bootstrap>:143(__init__)
        1    0.000    0.000    0.000    0.000 <frozen importlib._bootstrap>:147(__enter__)
        1    0.000    0.000    0.000    0.000 <frozen importlib._bootstrap>:151(__exit__)
        1    0.000    0.000    0.000    0.000 <frozen importlib._bootstrap>:157(_get_module_lock)
        1    0.000    0.000    0.000    0.000 <frozen importlib._bootstrap>:176(cb)
       55    0.000    0.000    0.000    0.000 <frozen importlib._bootstrap>:222(_verbose_message)
        1    0.000    0.000    0.000    0.000 <frozen importlib._bootstrap>:342(__init__)
        1    0.000    0.000    0.000    0.000 <frozen importlib._bootstrap>:58(__init__)
        1    0.000    0.000    0.000    0.000 <frozen importlib._bootstrap>:725(find_spec)
        1    0.000    0.000    0.000    0.000 <frozen importlib._bootstrap>:78(acquire)
        1    0.000    0.000    0.000    0.000 <frozen importlib._bootstrap>:800(find_spec)
        4    0.000    0.000    0.000    0.000 <frozen importlib._bootstrap>:863(__enter__)
        4    0.000    0.000    0.000    0.000 <frozen importlib._bootstrap>:867(__exit__)
        1    0.000    0.000    0.000    0.000 <frozen importlib._bootstrap>:881(_find_spec_legacy)
        1    0.000    0.000    0.002    0.002 <frozen importlib._bootstrap>:890(_find_spec)
        1    0.000    0.000    0.002    0.002 <frozen importlib._bootstrap>:956(_find_and_load_unlocked)
        1    0.000    0.000    0.002    0.002 <frozen importlib._bootstrap>:986(_find_and_load)
       12    0.000    0.000    0.000    0.000 <frozen importlib._bootstrap_external>:1265(_path_importer_cache)
        1    0.000    0.000    0.002    0.002 <frozen importlib._bootstrap_external>:1302(_get_spec)
        1    0.000    0.000    0.002    0.002 <frozen importlib._bootstrap_external>:1334(find_spec)
       11    0.000    0.000    0.002    0.000 <frozen importlib._bootstrap_external>:1431(find_spec)
        1    0.000    0.000    0.000    0.000 <frozen importlib._bootstrap_external>:1479(_fill_cache)
        1    0.000    0.000    0.000    0.000 <frozen importlib._bootstrap_external>:1508(<setcomp>)
       11    0.000    0.000    0.000    0.000 <frozen importlib._bootstrap_external>:36(_relax_case)
       55    0.000    0.000    0.000    0.000 <frozen importlib._bootstrap_external>:62(_path_join)
       55    0.000    0.000    0.000    0.000 <frozen importlib._bootstrap_external>:64(<listcomp>)
       11    0.000    0.000    0.001    0.000 <frozen importlib._bootstrap_external>:80(_path_stat)
        1    0.019    0.019    1.895    1.895 <ipython-input-8-9643e9d6306d>:5(detailTemp_DS)
        1    0.000    0.000    1.895    1.895 <string>:1(<module>)
        2    0.000    0.000    0.000    0.000 <string>:1(__new__)
       39    0.000    0.000    0.000    0.000 _asarray.py:14(asarray)
        8    0.000    0.000    0.000    0.000 _asarray.py:221(require)
        8    0.000    0.000    0.000    0.000 _asarray.py:298(<setcomp>)
       10    0.000    0.000    0.000    0.000 _asarray.py:86(asanyarray)
       34    0.000    0.000    0.000    0.000 _dtype.py:24(_kind_name)
       34    0.000    0.000    0.000    0.000 _dtype.py:307(_name_includes_bit_suffix)
       34    0.000    0.000    0.001    0.000 _dtype.py:321(_name_get)
        1    0.000    0.000    0.000    0.000 _methods.py:45(_sum)
       15    0.000    0.000    0.001    0.000 _methods.py:53(_any)
        5    0.000    0.000    0.000    0.000 _methods.py:56(_all)
        4    0.000    0.000    0.023    0.006 _mixins.py:33(take)
       39    0.000    0.000    0.000    0.000 _mixins.py:70(shape)
       33    0.000    0.000    0.000    0.000 _mixins.py:74(__len__)
        5    0.000    0.000    0.000    0.000 _mixins.py:77(ndim)
        1    0.000    0.000    0.000    0.000 _mixins.py:93(ravel)
        1    0.000    0.000    0.000    0.000 _ranges.py:13(generate_regular_range)
        8    0.000    0.000    0.000    0.000 _ufunc_config.py:132(geterr)
        8    0.000    0.000    0.000    0.000 _ufunc_config.py:32(seterr)
        4    0.000    0.000    0.000    0.000 _ufunc_config.py:429(__init__)
        4    0.000    0.000    0.000    0.000 _ufunc_config.py:433(__enter__)
        4    0.000    0.000    0.000    0.000 _ufunc_config.py:438(__exit__)
        5    0.000    0.000    0.000    0.000 _validators.py:208(validate_bool_kwarg)
        2    0.000    0.000    0.000    0.000 abc.py:100(__subclasscheck__)
       42    0.000    0.000    0.000    0.000 abc.py:96(__instancecheck__)
        1    0.000    0.000    0.000    0.000 aggregation.py:235(maybe_mangle_lambdas)
        1    0.000    0.000    0.000    0.000 aggregation.py:30(reconstruct_func)
        7    0.000    0.000    0.000    0.000 algorithms.py:1487(_get_take_nd_function)
        4    0.000    0.000    0.022    0.006 algorithms.py:1523(take)
        7    0.001    0.000    0.063    0.009 algorithms.py:1616(take_nd)
        1    0.000    0.000    0.000    0.000 base.py:1032(__iter__)
       14    0.000    0.000    0.000    0.000 base.py:1175(name)
       13    0.000    0.000    0.000    0.000 base.py:1182(name)
        1    0.000    0.000    0.000    0.000 base.py:1378(nlevels)
        4    0.000    0.000    0.007    0.002 base.py:1571(is_monotonic)
        5    0.010    0.002    0.010    0.002 base.py:1578(is_monotonic_increasing)
        2    0.051    0.025    0.051    0.025 base.py:1646(is_unique)
        1    0.000    0.000    0.000    0.000 base.py:1685(is_boolean)
        1    0.000    0.000    0.000    0.000 base.py:1841(is_object)
        2    0.000    0.000    0.000    0.000 base.py:2000(inferred_type)
        3    0.000    0.000    0.000    0.000 base.py:2007(is_all_dates)
        1    0.000    0.000    0.000    0.000 base.py:201(_obj_with_exclusions)
       20    0.000    0.000    0.000    0.000 base.py:201(construct_from_string)
        1    0.000    0.000    0.034    0.034 base.py:251(_try_aggregate_string_function)
      243    0.000    0.000    0.002    0.000 base.py:256(is_dtype)
        1    0.000    0.000    0.034    0.034 base.py:281(_aggregate)
     12/6    0.000    0.000    0.002    0.000 base.py:293(__new__)
        1    0.000    0.000    0.000    0.000 base.py:2957(get_indexer)
        1    0.000    0.000    0.000    0.000 base.py:3115(_validate_positional_slice)
        1    0.000    0.000    0.000    0.000 base.py:3275(_can_reindex)
        1    0.000    0.000    0.000    0.000 base.py:3291(reindex)
       21    0.000    0.000    0.000    0.000 base.py:3870(_values)
        2    0.000    0.000    0.000    0.000 base.py:3896(_get_engine_target)
        6    0.000    0.000    0.000    0.000 base.py:4083(__getitem__)
      214    0.001    0.000    0.001    0.000 base.py:413(find)
        3    0.000    0.000    0.000    0.000 base.py:4196(equals)
        2    0.000    0.000    0.000    0.000 base.py:424(<genexpr>)
        1    0.000    0.000    0.000    0.000 base.py:4275(identical)
        2    0.000    0.000    0.005    0.003 base.py:4529(argsort)
        6    0.000    0.000    0.000    0.000 base.py:463(_simple_new)
        1    0.000    0.000    0.000    0.000 base.py:4717(_maybe_promote)
        2    0.000    0.000    0.000    0.000 base.py:498(_shallow_copy)
        3    0.000    0.000    0.000    0.000 base.py:4985(_validate_indexer)
        3    0.000    0.000    0.000    0.000 base.py:520(is_)
       19    0.000    0.000    0.000    0.000 base.py:544(_reset_identity)
        1    0.000    0.000    0.000    0.000 base.py:5517(ensure_index_from_sequences)
        4    0.000    0.000    0.000    0.000 base.py:554(_engine)
       26    0.000    0.000    0.002    0.000 base.py:5557(ensure_index)
        5    0.000    0.000    0.000    0.000 base.py:561(<lambda>)
        1    0.000    0.000    0.000    0.000 base.py:5621(ensure_has_len)
        1    0.000    0.000    0.000    0.000 base.py:563(_get_cython_func)
       38    0.000    0.000    0.000    0.000 base.py:5654(maybe_extract_name)
       54    0.000    0.000    0.001    0.000 base.py:567(__len__)
        4    0.000    0.000    0.000    0.000 base.py:5670(_maybe_cast_with_dtype)
        4    0.000    0.000    0.000    0.000 base.py:5724(_maybe_cast_data_without_dtype)
        1    0.000    0.000    0.000    0.000 base.py:573(__array__)
        2    0.000    0.000    0.000    0.000 base.py:5838(_maybe_asobject)
        4    0.000    0.000    0.000    0.000 base.py:590(dtype)
        1    0.000    0.000    0.000    0.000 base.py:669(size)
        6    0.000    0.000    0.023    0.004 base.py:701(take)
        6    0.000    0.000    0.023    0.004 base.py:723(_assert_take_fillable)
        1    0.000    0.000    0.000    0.000 base.py:743(to_numpy)
        1    0.000    0.000    0.000    0.000 base.py:854(empty)
        2    0.000    0.000    0.024    0.012 base.py:954(to_native_types)
        1    0.000    0.000    0.000    0.000 base.py:984(_format_native_types)
        2    0.000    0.000    0.000    0.000 blocks.py:111(_simple_new)
        7    0.000    0.000    0.063    0.009 blocks.py:1238(take_nd)
       19    0.000    0.000    0.000    0.000 blocks.py:124(__init__)
       19    0.000    0.000    0.000    0.000 blocks.py:135(_check_ndim)
        2    0.000    0.000    0.032    0.016 blocks.py:1938(to_native_types)
        6    0.000    0.000    0.000    0.000 blocks.py:201(internal_values)
        6    0.000    0.000    0.000    0.000 blocks.py:229(fill_value)
       48    0.000    0.000    0.000    0.000 blocks.py:233(mgr_locs)
       23    0.000    0.000    0.000    0.000 blocks.py:237(mgr_locs)
        6    0.000    0.000    0.000    0.000 blocks.py:2374(__init__)
        2    0.000    0.000    0.000    0.000 blocks.py:244(make_block)
       11    0.000    0.000    0.000    0.000 blocks.py:256(make_block_same_class)
       14    0.000    0.000    0.001    0.000 blocks.py:2655(get_block_type)
        8    0.000    0.000    0.001    0.000 blocks.py:2701(make_block)
        2    0.000    0.000    0.000    0.000 blocks.py:2728(_extend_blocks)
        2    0.000    0.000    0.000    0.000 blocks.py:287(_slice)
        2    0.000    0.000    0.000    0.000 blocks.py:292(getitem_block)
        5    0.000    0.000    0.000    0.000 blocks.py:311(shape)
       13    0.000    0.000    0.000    0.000 blocks.py:315(dtype)
        2    0.000    0.000    0.000    0.000 blocks.py:619(convert)
        4    0.000    0.000    0.000    0.000 blocks.py:675(copy)
        7    0.000    0.000    0.000    0.000 cast.py:1185(maybe_castable)
        5    0.000    0.000    0.000    0.000 cast.py:1199(maybe_infer_to_datetimelike)
        8    0.000    0.000    0.000    0.000 cast.py:1308(maybe_cast_to_datetime)
        5    0.000    0.000    0.000    0.000 cast.py:1568(construct_1d_object_array_from_listlike)
        5    0.000    0.000    0.000    0.000 cast.py:1593(construct_1d_ndarray_preserving_na)
        2    0.000    0.000    0.000    0.000 cast.py:184(maybe_downcast_numeric)
        2    0.000    0.000    0.000    0.000 cast.py:300(maybe_cast_result_dtype)
        8    0.000    0.000    0.000    0.000 cast.py:442(maybe_promote)
        8    0.000    0.000    0.000    0.000 cast.py:598(_ensure_dtype_type)
        1    0.000    0.000    0.000    0.000 codecs.py:186(__init__)
        9    0.000    0.000    0.000    0.000 common.py:1025(is_datetime_or_timedelta_dtype)
        1    0.000    0.000    0.000    0.000 common.py:111(ensure_int_or_float)
        8    0.000    0.000    0.000    0.000 common.py:1180(needs_i8_conversion)
        2    0.000    0.000    0.000    0.000 common.py:1223(is_numeric_dtype)
        2    0.000    0.000    0.000    0.000 common.py:1265(is_string_like_dtype)
        2    0.000    0.000    0.000    0.000 common.py:1293(<lambda>)
       50    0.000    0.000    0.000    0.000 common.py:1296(is_float_dtype)
       40    0.000    0.000    0.001    0.000 common.py:1330(is_bool_dtype)
        2    0.000    0.000    0.000    0.000 common.py:140(is_fsspec_url)
      210    0.001    0.000    0.001    0.000 common.py:1460(is_extension_array_dtype)
        6    0.000    0.000    0.000    0.000 common.py:149(cast_scalar_indexer)
        1    0.000    0.000    0.000    0.000 common.py:1509(is_complex_dtype)
        2    0.000    0.000    0.000    0.000 common.py:152(get_filepath_or_buffer)
       18    0.000    0.000    0.000    0.000 common.py:1541(_is_dtype)
       98    0.000    0.000    0.000    0.000 common.py:1565(_get_dtype)
      216    0.000    0.000    0.001    0.000 common.py:1600(_is_dtype_type)
       39    0.000    0.000    0.000    0.000 common.py:1733(pandas_dtype)
      126    0.000    0.000    0.000    0.000 common.py:178(classes)
      126    0.000    0.000    0.000    0.000 common.py:180(<lambda>)
       90    0.000    0.000    0.000    0.000 common.py:183(classes_and_not_datetimelike)
       90    0.000    0.000    0.000    0.000 common.py:188(<lambda>)
       53    0.000    0.000    0.000    0.000 common.py:194(is_object_dtype)
        1    0.000    0.000    0.000    0.000 common.py:211(count_not_none)
        5    0.000    0.000    0.000    0.000 common.py:215(<genexpr>)
       10    0.000    0.000    0.000    0.000 common.py:218(asarray_tuplesafe)
       16    0.000    0.000    0.000    0.000 common.py:224(is_sparse)
        2    0.000    0.000    0.000    0.000 common.py:269(get_compression_method)
        2    0.000    0.000    0.000    0.000 common.py:274(maybe_iterable_to_list)
        3    0.000    0.000    0.000    0.000 common.py:302(infer_compression)
        1    0.000    0.000    0.000    0.000 common.py:329(apply_if_callable)
       17    0.000    0.000    0.000    0.000 common.py:348(is_datetime64_dtype)
        1    0.000    0.000    0.003    0.003 common.py:356(get_handle)
       47    0.000    0.000    0.000    0.000 common.py:381(is_datetime64tz_dtype)
       35    0.000    0.000    0.000    0.000 common.py:422(is_timedelta64_dtype)
       61    0.000    0.000    0.001    0.000 common.py:456(is_period_dtype)
        2    0.000    0.000    0.000    0.000 common.py:49(is_url)
       41    0.000    0.000    0.000    0.000 common.py:492(is_interval_dtype)
      120    0.000    0.000    0.002    0.000 common.py:530(is_categorical_dtype)
       16    0.000    0.000    0.000    0.000 common.py:566(is_string_dtype)
       16    0.000    0.000    0.000    0.000 common.py:595(condition)
        3    0.000    0.000    0.000    0.000 common.py:598(is_excluded_dtype)
       12    0.000    0.000    0.000    0.000 common.py:603(<genexpr>)
       19    0.000    0.000    0.000    0.000 common.py:608(is_dtype_equal)
        7    0.000    0.000    0.000    0.000 common.py:67(_expand_user)
       72    0.000    0.000    0.001    0.000 common.py:696(is_integer_dtype)
        8    0.000    0.000    0.000    0.000 common.py:750(is_signed_integer_dtype)
        8    0.000    0.000    0.000    0.000 common.py:806(is_unsigned_integer_dtype)
        1    0.000    0.000    0.000    0.000 common.py:88(validate_header_arg)
       24    0.000    0.000    0.000    0.000 common.py:905(is_datetime64_any_dtype)
        2    0.000    0.000    0.000    0.000 common.py:947(is_datetime64_ns_dtype)
        3    0.000    0.000    0.000    0.000 common.py:97(is_bool_indexer)
        5    0.000    0.000    0.000    0.000 common.py:97(stringify_path)
        1    0.000    0.000    0.046    0.046 construction.py:237(init_dict)
        1    0.000    0.000    0.021    0.021 construction.py:329(_homogenize)
       17    0.000    0.000    0.000    0.000 construction.py:339(extract_array)
        9    0.000    0.000    0.022    0.002 construction.py:390(sanitize_array)
        9    0.000    0.000    0.001    0.000 construction.py:520(_try_cast)
        7    0.000    0.000    0.000    0.000 construction.py:580(is_empty_data)
        1    0.000    0.000    0.043    0.043 construction.py:60(arrays_to_mgr)
        2    0.000    0.000    0.002    0.001 construction.py:600(create_series_with_explicit_dtype)
        1    0.000    0.000    0.110    0.110 csvs.py:158(save)
        1    0.000    0.000    0.000    0.000 csvs.py:233(_save_header)
        1    0.000    0.000    0.107    0.107 csvs.py:313(_save)
        1    0.000    0.000    0.106    0.106 csvs.py:330(_save_chunk)
        1    0.000    0.000    0.000    0.000 csvs.py:34(__init__)
        1    0.000    0.000    0.001    0.001 datetimelike.py:1000(_hasnans)
       20    0.000    0.000    0.000    0.000 datetimelike.py:1082(freq)
        1    0.003    0.003    0.056    0.056 datetimelike.py:1106(inferred_freq)
        1    0.000    0.000    0.000    0.000 datetimelike.py:1670(validate_periods)
        1    0.000    0.000    0.000    0.000 datetimelike.py:1696(validate_endpoints)
        8    0.000    0.000    0.000    0.000 datetimelike.py:1729(validate_inferred_freq)
        8    0.000    0.000    0.000    0.000 datetimelike.py:1764(maybe_infer_freq)
        4    0.000    0.000    0.027    0.007 datetimelike.py:181(take)
        1    0.000    0.000    0.006    0.006 datetimelike.py:224(min)
        1    0.000    0.000    0.000    0.000 datetimelike.py:281(max)
       44    0.000    0.000    0.000    0.000 datetimelike.py:464(_ndarray)
        5    0.000    0.000    0.000    0.000 datetimelike.py:469(_from_backing_data)
       55    0.000    0.000    0.000    0.000 datetimelike.py:491(asi8)
        2    0.000    0.000    0.000    0.000 datetimelike.py:524(__array__)
        4    0.000    0.000    0.000    0.000 datetimelike.py:530(__getitem__)
        3    0.000    0.000    0.000    0.000 datetimelike.py:564(_get_getitem_freq)
        1    0.000    0.000    0.000    0.000 datetimelike.py:622(astype)
        4    0.000    0.000    0.000    0.000 datetimelike.py:640(_shallow_copy)
        3    0.000    0.000    0.000    0.000 datetimelike.py:711(_values_for_argsort)
        1    0.001    0.001    0.001    0.001 datetimelike.py:993(_isnan)
        1    0.000    0.000    0.001    0.001 datetimes.py:135(_maybe_cache)
        1    0.000    0.000    0.000    0.000 datetimes.py:175(_box_as_indexlike)
        8    0.000    0.000    0.001    0.000 datetimes.py:1871(sequence_to_dt64ns)
        1    0.000    0.000    0.635    0.635 datetimes.py:2002(objects_to_datetime64ns)
        9    0.000    0.000    0.001    0.000 datetimes.py:2085(maybe_convert_dtype)
        5    0.000    0.000    0.000    0.000 datetimes.py:214(__init__)
       13    0.000    0.000    0.000    0.000 datetimes.py:2178(_validate_dt64_dtype)
       16    0.000    0.000    0.000    0.000 datetimes.py:2220(validate_tz_from_dtype)
        1    0.000    0.000    0.000    0.000 datetimes.py:2267(_infer_tz_from_endpoints)
        1    0.000    0.000    0.000    0.000 datetimes.py:2310(_maybe_normalize_endpoints)
        8    0.000    0.000    0.002    0.000 datetimes.py:246(__new__)
        1    0.000    0.000    0.635    0.635 datetimes.py:259(_convert_listlike_datetimes)
       13    0.000    0.000    0.000    0.000 datetimes.py:285(_simple_new)
       13    0.000    0.000    0.000    0.000 datetimes.py:286(_simple_new)
        8    0.000    0.000    0.001    0.000 datetimes.py:299(_from_sequence)
        1    0.000    0.000    0.000    0.000 datetimes.py:344(_generate_range)
        3    0.000    0.000    0.000    0.000 datetimes.py:474(_box_func)
        3    0.000    0.000    0.000    0.000 datetimes.py:476(<lambda>)
       77    0.000    0.000    0.000    0.000 datetimes.py:478(dtype)
        9    0.000    0.000    0.000    0.000 datetimes.py:500(tz)
        2    0.000    0.000    0.000    0.000 datetimes.py:542(__array__)
        1    0.000    0.000    0.000    0.000 datetimes.py:572(astype)
       10    0.000    0.000    0.000    0.000 datetimes.py:58(tz_to_dtype)
        1    0.000    0.000    0.024    0.024 datetimes.py:604(_format_native_types)
        1    0.000    0.000    0.637    0.637 datetimes.py:605(to_datetime)
        1    0.000    0.000    0.000    0.000 datetimes.py:79(should_cache)
        1    0.000    0.000    0.000    0.000 datetimes.py:849(date_range)
        2    0.000    0.000    0.000    0.000 dtype.py:187(construct_from_string)
        2    0.000    0.000    0.000    0.000 dtypes.py:1062(construct_from_string)
       32    0.000    0.000    0.000    0.000 dtypes.py:1116(is_dtype)
        2    0.000    0.000    0.000    0.000 dtypes.py:281(construct_from_string)
        2    0.000    0.000    0.000    0.000 dtypes.py:694(construct_from_string)
        2    0.000    0.000    0.000    0.000 dtypes.py:853(construct_from_string)
       53    0.000    0.000    0.001    0.000 dtypes.py:903(is_dtype)
        4    0.000    0.000    0.001    0.000 extension.py:214(__getitem__)
        3    0.000    0.000    0.000    0.000 extension.py:228(_get_engine_target)
        1    0.000    0.000    0.001    0.001 extension.py:269(astype)
        2    0.000    0.000    0.057    0.029 extension.py:44(cached)
       21    0.000    0.000    0.000    0.000 extension.py:53(fget)
        1    0.000    0.000    0.024    0.024 extension.py:77(method)
        1    0.000    0.000    0.001    0.001 format.py:1574(_is_dates_only)
        1    0.000    0.000    0.001    0.001 format.py:1637(_get_format_datetime64_from_values)
        6    0.000    0.000    0.000    0.000 frame.py:421(_constructor)
        7    0.000    0.000    0.046    0.007 frame.py:441(__init__)
        1    0.000    0.000    0.000    0.000 frame.py:585(shape)
        1    0.000    0.000    0.000    0.000 frame.py:6397(groupby)
        1    0.000    0.000    0.054    0.054 frequencies.py:120(infer_freq)
        1    0.000    0.000    0.003    0.003 frequencies.py:191(__init__)
        1    0.000    0.000    0.051    0.051 frequencies.py:230(get_freq)
        1    0.000    0.000    0.000    0.000 frequencies.py:492(is_superperiod)
        2    0.000    0.000    0.000    0.000 frequencies.py:550(_maybe_coerce_freq)
        1    0.000    0.000    0.000    0.000 frequencies.py:575(_is_annual)
        1    0.000    0.000    0.000    0.000 frequencies.py:580(_is_quarterly)
        1    0.000    0.000    0.000    0.000 frequencies.py:585(_is_monthly)
        1    0.000    0.000    0.000    0.000 frequencies.py:590(_is_weekly)
        4    0.000    0.000    0.000    0.000 fromnumeric.py:2333(_all_dispatcher)
        4    0.000    0.000    0.000    0.000 fromnumeric.py:2337(all)
        2    0.000    0.000    0.000    0.000 fromnumeric.py:3071(_ndim_dispatcher)
        2    0.000    0.000    0.000    0.000 fromnumeric.py:3075(ndim)
        1    0.000    0.000    0.000    0.000 fromnumeric.py:433(_repeat_dispatcher)
        1    0.000    0.000    0.005    0.005 fromnumeric.py:437(repeat)
        1    0.000    0.000    0.005    0.005 fromnumeric.py:52(_wrapfunc)
        4    0.000    0.000    0.000    0.000 fromnumeric.py:70(_wrapreduction)
        4    0.000    0.000    0.000    0.000 fromnumeric.py:71(<dictcomp>)
        2    0.000    0.000    0.000    0.000 fromnumeric.py:835(_sort_dispatcher)
        2    0.000    0.000    0.000    0.000 fromnumeric.py:839(sort)
        1    0.000    0.000    0.000    0.000 function.py:384(validate_resampler_func)
        2    0.000    0.000    0.000    0.000 function.py:400(validate_minmax_axis)
        9    0.000    0.000    0.000    0.000 function.py:48(__call__)
        1    0.000    0.000    0.000    0.000 function_base.py:1148(_diff_dispatcher)
        1    0.000    0.000    0.000    0.000 function_base.py:1152(diff)
      981    0.001    0.000    0.001    0.000 generic.py:10(_check)
        1    0.000    0.000    0.034    0.034 generic.py:1018(_cython_agg_general)
        1    0.000    0.000    0.033    0.033 generic.py:1026(_cython_agg_blocks)
        1    0.000    0.000    0.000    0.000 generic.py:11556(logical_func)
        1    0.000    0.000    0.000    0.000 generic.py:1696(_get_data_to_aggregate)
        1    0.000    0.000    0.001    0.001 generic.py:1781(_wrap_agged_blocks)
       13    0.000    0.000    0.000    0.000 generic.py:195(__init__)
        8    0.000    0.000    0.000    0.000 generic.py:232(attrs)
        4    0.000    0.000    0.000    0.000 generic.py:249(_validate_dtype)
        1    0.000    0.000    0.110    0.110 generic.py:2994(to_csv)
        2    0.000    0.000    0.084    0.042 generic.py:3256(take)
        1    0.000    0.000    0.000    0.000 generic.py:334(_construct_axes_from_arguments)
        1    0.000    0.000    0.001    0.001 generic.py:3551(_slice)
        1    0.000    0.000    0.000    0.000 generic.py:3582(_set_is_copy)
        1    0.000    0.000    0.000    0.000 generic.py:362(<dictcomp>)
       15    0.000    0.000    0.000    0.000 generic.py:365(_get_axis_number)
        6    0.000    0.000    0.000    0.000 generic.py:377(_get_axis)
        4    0.000    0.000    0.000    0.000 generic.py:382(_get_block_manager_axis)
        1    0.000    0.000    0.001    0.001 generic.py:4214(reindex)
        2    0.000    0.000    0.000    0.000 generic.py:4447(<genexpr>)
        1    0.000    0.000    0.001    0.001 generic.py:4465(_reindex_axes)
        1    0.000    0.000    0.000    0.000 generic.py:4502(_reindex_with_indexers)
        8    0.000    0.000    0.000    0.000 generic.py:5095(__finalize__)
        6    0.000    0.000    0.000    0.000 generic.py:5123(__getattr__)
       10    0.000    0.000    0.000    0.000 generic.py:5141(__setattr__)
        4    0.000    0.000    0.000    0.000 generic.py:5197(_protect_consolidate)
        3    0.000    0.000    0.000    0.000 generic.py:5208(_consolidate_inplace)
        3    0.000    0.000    0.000    0.000 generic.py:5211(f)
        1    0.000    0.000    0.000    0.000 generic.py:5216(_consolidate)
        1    0.000    0.000    0.000    0.000 generic.py:5234(<lambda>)
        1    0.000    0.000    0.000    0.000 generic.py:5679(_convert)
        1    0.000    0.000    0.000    0.000 generic.py:7060(isna)
        1    0.000    0.000    0.113    0.113 generic.py:7692(resample)
        1    0.000    0.000    0.034    0.034 generic.py:937(aggregate)
        1    0.000    0.000    0.034    0.034 groupby.py:1343(mean)
        1    0.000    0.000    0.001    0.001 groupby.py:2670(_reindex_output)
        1    0.000    0.000    0.000    0.000 groupby.py:483(__init__)
        1    0.000    0.000    0.000    0.000 groupby.py:632(_selected_obj)
        1    0.000    0.000    0.000    0.000 groupby.py:697(__getattr__)
        1    0.000    0.000    0.000    0.000 grouper.py:227(__new__)
        1    0.000    0.000    0.000    0.000 grouper.py:270(__init__)
        3    0.000    0.000    0.000    0.000 grouper.py:286(ax)
        2    0.008    0.004    0.112    0.056 grouper.py:314(_set_grouper)
        1    0.000    0.000    0.001    0.001 grouper.py:413(__init__)
        1    0.000    0.000    0.000    0.000 grouper.py:605(get_grouper)
        1    0.000    0.000    0.000    0.000 grouper.py:829(_convert_grouper)
        1    0.000    0.000    0.000    0.000 index_tricks.py:316(__getitem__)
        2    0.004    0.002    0.005    0.002 indexers.py:210(maybe_convert_indices)
        1    0.000    0.000    0.000    0.000 indexers.py:298(deprecate_ndim_indexing)
        3    0.000    0.000    0.000    0.000 indexers.py:348(check_array_indexer)
        1    0.000    0.000    0.000    0.000 indexing.py:100(iloc)
        1    0.000    0.000    0.001    0.001 indexing.py:1474(_getitem_axis)
        1    0.000    0.000    0.001    0.001 indexing.py:1500(_get_slice_axis)
        1    0.000    0.000    0.000    0.000 indexing.py:2270(need_slice)
        1    0.000    0.000    0.001    0.001 indexing.py:864(__getitem__)
        7    0.000    0.000    0.000    0.000 inference.py:185(is_array_like)
        6    0.000    0.000    0.000    0.000 inference.py:263(is_dict_like)
       20    0.000    0.000    0.000    0.000 inference.py:289(<genexpr>)
       51    0.000    0.000    0.000    0.000 inference.py:322(is_hashable)
        1    0.000    0.000    0.000    0.000 inference.py:96(is_file_like)
        3    0.000    0.000    0.063    0.021 managers.py:1238(reindex_indexer)
        2    0.000    0.000    0.063    0.031 managers.py:1284(<listcomp>)
        1    0.000    0.000    0.000    0.000 managers.py:1300(_slice_take_blocks_ax0)
        7    0.000    0.000    0.000    0.000 managers.py:132(__init__)
        7    0.000    0.000    0.000    0.000 managers.py:138(<listcomp>)
        2    0.002    0.001    0.084    0.042 managers.py:1427(take)
        4    0.000    0.000    0.000    0.000 managers.py:1532(__init__)
        1    0.000    0.000    0.000    0.000 managers.py:1553(from_blocks)
        4    0.000    0.000    0.000    0.000 managers.py:156(from_blocks)
        3    0.000    0.000    0.000    0.000 managers.py:1564(from_array)
        6    0.000    0.000    0.000    0.000 managers.py:1575(_block)
        6    0.000    0.000    0.000    0.000 managers.py:1613(internal_values)
        1    0.000    0.000    0.000    0.000 managers.py:1621(is_consolidated)
        1    0.000    0.000    0.000    0.000 managers.py:1627(_consolidate_inplace)
        1    0.000    0.000    0.021    0.021 managers.py:1675(create_block_manager_from_arrays)
        3    0.000    0.000    0.000    0.000 managers.py:1680(<genexpr>)
        1    0.000    0.000    0.021    0.021 managers.py:1715(form_blocks)
        1    0.000    0.000    0.010    0.010 managers.py:1812(_simple_blockify)
        2    0.000    0.000    0.010    0.005 managers.py:1827(_multi_blockify)
        4    0.000    0.000    0.000    0.000 managers.py:1830(<lambda>)
        3    0.014    0.005    0.020    0.007 managers.py:1843(_stack_arrays)
        6    0.000    0.000    0.000    0.000 managers.py:1846(_asarray_compat)
        3    0.000    0.000    0.000    0.000 managers.py:1852(_shape_compat)
        1    0.000    0.000    0.000    0.000 managers.py:2015(_preprocess_slice_or_indexer)
        6    0.000    0.000    0.000    0.000 managers.py:212(shape)
       17    0.000    0.000    0.000    0.000 managers.py:214(<genexpr>)
       19    0.000    0.000    0.000    0.000 managers.py:216(ndim)
        4    0.000    0.000    0.000    0.000 managers.py:259(items)
        2    0.000    0.000    0.000    0.000 managers.py:321(_verify_integrity)
        7    0.000    0.000    0.000    0.000 managers.py:323(<genexpr>)
        1    0.000    0.000    0.000    0.000 managers.py:366(apply)
        1    0.000    0.000    0.000    0.000 managers.py:385(<dictcomp>)
        1    0.000    0.000    0.000    0.000 managers.py:597(convert)
        8    0.000    0.000    0.000    0.000 managers.py:675(is_consolidated)
        1    0.000    0.000    0.000    0.000 managers.py:683(_consolidate_check)
        1    0.000    0.000    0.000    0.000 managers.py:684(<listcomp>)
        1    0.000    0.000    0.000    0.000 managers.py:728(get_numeric_data)
        1    0.000    0.000    0.000    0.000 managers.py:735(<listcomp>)
        1    0.000    0.000    0.000    0.000 managers.py:737(_combine)
        1    0.000    0.000    0.000    0.000 managers.py:743(<listcomp>)
        1    0.000    0.000    0.000    0.000 managers.py:757(get_slice)
        1    0.000    0.000    0.000    0.000 managers.py:763(<listcomp>)
        4    0.000    0.000    0.000    0.000 managers.py:961(consolidate)
        5    0.000    0.000    0.000    0.000 managers.py:977(_consolidate_inplace)
       13    0.000    0.000    0.001    0.000 missing.py:130(_isna)
        6    0.000    0.000    0.001    0.000 missing.py:193(_isna_ndarraylike)
        2    0.000    0.000    0.000    0.000 missing.py:235(_isna_string_dtype)
        1    0.000    0.000    0.000    0.000 missing.py:255(notna)
        2    0.000    0.000    0.000    0.000 missing.py:341(_isna_compat)
        3    0.000    0.000    0.000    0.000 missing.py:358(array_equivalent)
        1    0.000    0.000    0.000    0.000 missing.py:456(_array_equivalent_object)
       13    0.000    0.000    0.001    0.000 missing.py:47(isna)
        2    0.000    0.000    0.000    0.000 missing.py:507(_maybe_fill)
        2    0.000    0.000    0.000    0.000 missing.py:665(clean_reindex_fill_method)
        2    0.000    0.000    0.000    0.000 missing.py:75(clean_fill_method)
        2    0.000    0.000    0.000    0.000 multiarray.py:1043(copyto)
       10    0.000    0.000    0.000    0.000 multiarray.py:143(concatenate)
        2    0.000    0.000    0.000    0.000 multiarray.py:583(min_scalar_type)
        2    0.000    0.000    0.000    0.000 multiarray.py:634(result_type)
        2    0.000    0.000    0.000    0.000 multiarray.py:75(empty_like)
        1    0.000    0.000    0.000    0.000 nanops.py:168(_get_fill_value)
        1    0.000    0.000    0.000    0.000 nanops.py:193(_maybe_get_mask)
        1    0.000    0.000    0.000    0.000 nanops.py:237(_get_values)
        1    0.000    0.000    0.000    0.000 nanops.py:322(_na_ok_dtype)
        1    0.000    0.000    0.000    0.000 nanops.py:396(nanany)
        7    0.000    0.000    0.000    0.000 ntpath.py:289(expanduser)
        1    0.000    0.000    0.000    0.000 numba_.py:17(maybe_use_numba)
        2    0.000    0.000    0.000    0.000 numeric.py:2193(_isclose_dispatcher)
        2    0.000    0.000    0.000    0.000 numeric.py:2197(isclose)
        2    0.000    0.000    0.000    0.000 numeric.py:2274(within_tol)
        2    0.000    0.000    0.000    0.000 numeric.py:71(_zeros_like_dispatcher)
        2    0.000    0.000    0.000    0.000 numeric.py:75(zeros_like)
       30    0.000    0.000    0.000    0.000 numerictypes.py:286(issubclass_)
       15    0.000    0.000    0.000    0.000 numerictypes.py:360(issubdtype)
        2    0.000    0.000    0.000    0.000 numerictypes.py:545(_can_coerce_all)
        1    0.000    0.000    0.000    0.000 numerictypes.py:569(find_common_type)
        1    0.000    0.000    0.000    0.000 numerictypes.py:621(<listcomp>)
        1    0.000    0.000    0.000    0.000 numerictypes.py:622(<listcomp>)
        1    0.000    0.000    0.000    0.000 ops.py:295(ngroups)
        3    0.000    0.000    0.000    0.000 ops.py:366(_get_cython_function)
        2    0.000    0.000    0.006    0.003 ops.py:402(_get_cython_func_and_vals)
        2    0.003    0.001    0.030    0.015 ops.py:436(_cython_operation)
        2    0.002    0.001    0.031    0.016 ops.py:581(aggregate)
        2    0.012    0.006    0.013    0.006 ops.py:591(_aggregate)
        1    0.000    0.000    0.000    0.000 ops.py:753(__init__)
        1    0.000    0.000    0.007    0.007 ops.py:833(group_info)
        1    0.000    0.000    0.000    0.000 ops.py:856(result_index)
        1    0.000    0.000    0.000    0.000 ops.py:863(levels)
        1    0.000    0.000    0.000    0.000 ops.py:867(names)
        1    0.000    0.000    0.001    0.001 ops.py:871(groupings)
        1    0.000    0.000    0.001    0.001 ops.py:873(<listcomp>)
        4    0.000    0.000    0.000    0.000 parse.py:110(_coerce_args)
        2    0.000    0.000    0.000    0.000 parse.py:366(urlparse)
        2    0.000    0.000    0.000    0.000 parse.py:417(urlsplit)
        4    0.000    0.000    0.000    0.000 parse.py:99(_noop)
        1    0.000    0.000    0.000    0.000 parsers.py:1005(_clean_options)
        1    0.000    0.000    0.005    0.005 parsers.py:1176(_make_engine)
        1    0.000    0.000    1.526    1.526 parsers.py:1194(read)
        1    0.000    0.000    0.000    0.000 parsers.py:1219(_create_index)
        4    0.000    0.000    0.000    0.000 parsers.py:1233(_is_index_col)
        3    0.000    0.000    0.000    0.000 parsers.py:1237(_is_potential_multi_index)
        6    0.000    0.000    0.000    0.000 parsers.py:1261(<genexpr>)
        1    0.000    0.000    0.000    0.000 parsers.py:1339(_validate_usecols_arg)
        1    0.000    0.000    0.000    0.000 parsers.py:1389(_validate_parse_dates_arg)
        1    0.000    0.000    0.000    0.000 parsers.py:1412(__init__)
        1    0.000    0.000    0.000    0.000 parsers.py:1499(_validate_parse_dates_presence)
        2    0.000    0.000    0.000    0.000 parsers.py:1526(<genexpr>)
        1    0.000    0.000    0.000    0.000 parsers.py:1535(<setcomp>)
        2    0.000    0.000    0.000    0.000 parsers.py:1551(_has_complex_date_col)
        1    0.000    0.000    0.000    0.000 parsers.py:1559(_should_parse_dates)
        1    0.000    0.000    0.000    0.000 parsers.py:1637(_maybe_dedup_names)
        2    0.000    0.000    0.000    0.000 parsers.py:1665(_maybe_make_multi_index_columns)
        1    0.000    0.000    0.658    0.658 parsers.py:1671(_make_index)
        1    0.000    0.000    0.000    0.000 parsers.py:1699(_get_simple_index)
        1    0.000    0.000    0.000    0.000 parsers.py:1700(ix)
        1    0.005    0.005    0.658    0.658 parsers.py:1748(_agg_index)
        1    0.000    0.000    0.000    0.000 parsers.py:1853(_infer_types)
        1    0.000    0.000    0.000    0.000 parsers.py:1959(_do_date_conversions)
        1    0.005    0.005    0.005    0.005 parsers.py:1981(__init__)
        1    0.000    0.000    0.001    0.001 parsers.py:2087(close)
        1    0.000    0.000    0.000    0.000 parsers.py:2097(_set_noconvert_columns)
        1    0.000    0.000    0.000    0.000 parsers.py:2118(_set)
        1    0.000    0.000    1.480    1.480 parsers.py:2153(read)
        1    0.000    0.000    0.000    0.000 parsers.py:2226(<listcomp>)
        1    0.000    0.000    0.000    0.000 parsers.py:2228(<dictcomp>)
        1    0.000    0.000    0.000    0.000 parsers.py:3335(_make_date_converter)
        1    0.000    0.000    0.653    0.653 parsers.py:3338(converter)
        1    0.000    0.000    0.000    0.000 parsers.py:3380(_process_date_conversion)
        1    0.000    0.000    0.000    0.000 parsers.py:3389(_isindex)
        1    0.000    0.000    0.000    0.000 parsers.py:3468(_clean_na_values)
        1    0.000    0.000    0.000    0.000 parsers.py:3505(_clean_index_names)
        2    0.000    0.000    0.000    0.000 parsers.py:369(_validate_integer)
        1    0.000    0.000    0.000    0.000 parsers.py:398(_validate_names)
        1    0.020    0.020    1.553    1.553 parsers.py:420(_read)
        1    0.000    0.000    1.553    1.553 parsers.py:533(read_csv)
        1    0.000    0.000    0.005    0.005 parsers.py:856(__init__)
        1    0.000    0.000    0.001    0.001 parsers.py:948(close)
        1    0.000    0.000    0.000    0.000 parsers.py:951(_get_options_with_defaults)
        1    0.000    0.000    0.000    0.000 parsers.py:989(_check_file_or_buffer)
        2    0.000    0.000    0.000    0.000 re.py:223(split)
        2    0.000    0.000    0.000    0.000 re.py:289(_compile)
        1    0.000    0.000    0.008    0.008 resample.py:1004(_get_binner_for_time)
        1    0.000    0.000    0.099    0.099 resample.py:1011(_downsample)
        2    0.000    0.000    0.000    0.000 resample.py:107(__getattr__)
        1    0.000    0.000    0.000    0.000 resample.py:1102(_wrap_result)
        1    0.000    0.000    0.113    0.113 resample.py:1264(get_resampler)
        1    0.000    0.000    0.001    0.001 resample.py:1313(__init__)
        1    0.000    0.000    0.000    0.000 resample.py:133(obj)
        2    0.000    0.000    0.000    0.000 resample.py:137(ax)
        1    0.000    0.000    0.113    0.113 resample.py:1405(_get_resampler)
        1    0.000    0.000    0.008    0.008 resample.py:1446(_get_time_bins)
        1    0.000    0.000    0.000    0.000 resample.py:1509(_adjust_bin_edges)
        1    0.000    0.000    0.000    0.000 resample.py:161(_convert_obj)
        1    0.000    0.000    0.000    0.000 resample.py:1668(_get_timestamp_range_edges)
        1    0.000    0.000    0.008    0.008 resample.py:179(_set_binner)
        1    0.000    0.000    0.000    0.000 resample.py:1792(_adjust_dates_anchored)
        1    0.000    0.000    0.008    0.008 resample.py:188(_get_binner)
        1    0.000    0.000    0.000    0.000 resample.py:393(_apply_loffset)
        1    0.000    0.000    0.000    0.000 resample.py:423(_wrap_result)
        1    0.000    0.000    0.061    0.061 resample.py:80(__init__)
        1    0.000    0.000    0.099    0.099 resample.py:934(g)
      6/3    0.000    0.000    0.004    0.001 series.py:201(__init__)
        2    0.000    0.000    0.003    0.001 series.py:335(_init_dict)
        2    0.000    0.000    0.000    0.000 series.py:381(_constructor)
        5    0.000    0.000    0.000    0.000 series.py:398(_set_axis)
        1    0.000    0.000    0.000    0.000 series.py:4211(_reduce)
        1    0.000    0.000    0.000    0.000 series.py:4249(_needs_reindex_multi)
        1    0.000    0.000    0.001    0.001 series.py:4391(reindex)
       10    0.000    0.000    0.000    0.000 series.py:442(name)
        1    0.000    0.000    0.000    0.000 series.py:4793(isna)
        9    0.000    0.000    0.000    0.000 series.py:492(name)
        6    0.000    0.000    0.000    0.000 series.py:540(_values)
        1    0.000    0.000    0.000    0.000 six.py:184(find_module)
        2    0.000    0.000    0.000    0.000 typing.py:768(__instancecheck__)
        2    0.000    0.000    0.000    0.000 typing.py:771(__subclasscheck__)
        2    0.000    0.000    0.000    0.000 typing.py:868(__new__)
       39    0.000    0.000    0.000    0.000 {built-in method __new__ of type object at 0x00007FFE23F2B810}
       42    0.000    0.000    0.000    0.000 {built-in method _abc._abc_instancecheck}
        2    0.000    0.000    0.000    0.000 {built-in method _abc._abc_subclasscheck}
        1    0.000    0.000    0.000    0.000 {built-in method _csv.writer}
        6    0.000    0.000    0.000    0.000 {built-in method _imp.acquire_lock}
        1    0.000    0.000    0.000    0.000 {built-in method _imp.is_builtin}
        1    0.000    0.000    0.000    0.000 {built-in method _imp.is_frozen}
        6    0.000    0.000    0.000    0.000 {built-in method _imp.release_lock}
        2    0.000    0.000    0.000    0.000 {built-in method _thread.allocate_lock}
        2    0.000    0.000    0.000    0.000 {built-in method _thread.get_ident}
        4    0.000    0.000    0.000    0.000 {built-in method builtins.abs}
       12    0.000    0.000    0.000    0.000 {built-in method builtins.all}
        3    0.000    0.000    0.000    0.000 {built-in method builtins.any}
        5    0.000    0.000    0.000    0.000 {built-in method builtins.callable}
        1    0.000    0.000    1.895    1.895 {built-in method builtins.exec}
1569/1533    0.001    0.000    0.058    0.000 {built-in method builtins.getattr}
      144    0.000    0.000    0.000    0.000 {built-in method builtins.hasattr}
       51    0.000    0.000    0.000    0.000 {built-in method builtins.hash}
2562/2560    0.002    0.000    0.003    0.000 {built-in method builtins.isinstance}
      715    0.000    0.000    0.000    0.000 {built-in method builtins.issubclass}
  270/216    0.000    0.000    0.001    0.000 {built-in method builtins.len}
        1    0.000    0.000    0.000    0.000 {built-in method builtins.min}
        1    0.000    0.000    0.000    0.000 {built-in method builtins.ord}
        4    0.000    0.000    0.000    0.000 {built-in method builtins.sorted}
        3    0.000    0.000    0.000    0.000 {built-in method builtins.sum}
        1    0.000    0.000    0.000    0.000 {built-in method from_iterable}
        1    0.001    0.001    0.001    0.001 {built-in method io.open}
        7    0.000    0.000    0.000    0.000 {built-in method nt.fspath}
        1    0.000    0.000    0.000    0.000 {built-in method nt.getcwd}
        1    0.000    0.000    0.000    0.000 {built-in method nt.listdir}
       11    0.001    0.000    0.001    0.000 {built-in method nt.stat}
        4    0.000    0.000    0.000    0.000 {built-in method numpy.arange}
    78/77    0.000    0.000    0.000    0.000 {built-in method numpy.array}
    32/22    0.025    0.001    0.030    0.001 {built-in method numpy.core._multiarray_umath.implement_array_function}
        1    0.000    0.000    0.000    0.000 {built-in method numpy.core._multiarray_umath.normalize_axis_index}
       19    0.017    0.001    0.017    0.001 {built-in method numpy.empty}
       16    0.000    0.000    0.000    0.000 {built-in method numpy.geterrobj}
        8    0.000    0.000    0.000    0.000 {built-in method numpy.seterrobj}
        4    0.000    0.000    0.000    0.000 {built-in method numpy.zeros}
        3    0.000    0.000    0.000    0.000 {built-in method pandas._libs.lib.is_datetime_array}
        7    0.000    0.000    0.000    0.000 {built-in method pandas._libs.missing.checknull}
        2    0.000    0.000    0.000    0.000 {built-in method pandas._libs.missing.isnaobj}
        1    0.635    0.635    0.635    0.635 {built-in method pandas._libs.tslib.array_to_datetime}
       10    0.000    0.000    0.001    0.000 {built-in method pandas._libs.tslibs.offsets.to_offset}
       10    0.000    0.000    0.000    0.000 {built-in method pandas._libs.tslibs.timezones.maybe_get_tz}
        1    0.000    0.000    0.000    0.000 {built-in method sys.getfilesystemencoding}
       13    0.000    0.000    0.000    0.000 {method 'add' of 'set' objects}
        4    0.000    0.000    0.000    0.000 {method 'all' of 'numpy.generic' objects}
        1    0.000    0.000    0.000    0.000 {method 'all' of 'numpy.ndarray' objects}
       12    0.000    0.000    0.001    0.000 {method 'any' of 'numpy.ndarray' objects}
       33    0.000    0.000    0.000    0.000 {method 'append' of 'list' objects}
        2    0.005    0.003    0.005    0.003 {method 'argsort' of 'numpy.ndarray' objects}
        6    0.034    0.006    0.034    0.006 {method 'astype' of 'numpy.ndarray' objects}
        2    0.000    0.000    0.000    0.000 {method 'close' of '_io.TextIOWrapper' objects}
        1    0.001    0.001    0.001    0.001 {method 'close' of 'pandas._libs.parsers.TextReader' objects}
        2    0.000    0.000    0.000    0.000 {method 'copy' of 'dict' objects}
        4    0.000    0.000    0.000    0.000 {method 'copy' of 'numpy.ndarray' objects}
        1    0.000    0.000    0.000    0.000 {method 'disable' of '_lsprof.Profiler' objects}
        1    0.000    0.000    0.000    0.000 {method 'encode' of 'str' objects}
        8    0.000    0.000    0.000    0.000 {method 'endswith' of 'str' objects}
        4    0.000    0.000    0.000    0.000 {method 'extend' of 'list' objects}
        2    0.000    0.000    0.000    0.000 {method 'fill' of 'numpy.ndarray' objects}
       29    0.000    0.000    0.000    0.000 {method 'format' of 'str' objects}
       80    0.000    0.000    0.000    0.000 {method 'get' of 'dict' objects}
        1    0.000    0.000    0.000    0.000 {method 'get_indexer' of 'pandas._libs.index.IndexEngine' objects}
        3    0.000    0.000    0.000    0.000 {method 'index' of 'list' objects}
       11    0.000    0.000    0.000    0.000 {method 'items' of 'dict' objects}
       56    0.000    0.000    0.000    0.000 {method 'join' of 'str' objects}
        1    0.000    0.000    0.000    0.000 {method 'keys' of 'dict' objects}
       37    0.000    0.000    0.000    0.000 {method 'lower' of 'str' objects}
        2    0.000    0.000    0.000    0.000 {method 'match' of 're.Pattern' objects}
        1    0.000    0.000    0.000    0.000 {method 'normalize' of 'pandas._libs.tslibs.timestamps._Timestamp' objects}
       13    0.000    0.000    0.000    0.000 {method 'partition' of 'str' objects}
       20    0.000    0.000    0.000    0.000 {method 'pop' of 'dict' objects}
        2    0.000    0.000    0.000    0.000 {method 'pop' of 'list' objects}
        7    0.000    0.000    0.000    0.000 {method 'ravel' of 'numpy.ndarray' objects}
        1    0.795    0.795    0.822    0.822 {method 'read' of 'pandas._libs.parsers.TextReader' objects}
       21    0.001    0.000    0.001    0.000 {method 'reduce' of 'numpy.ufunc' objects}
        1    0.000    0.000    0.000    0.000 {method 'remove' of 'list' objects}
        1    0.005    0.005    0.005    0.005 {method 'repeat' of 'numpy.ndarray' objects}
        3    0.000    0.000    0.000    0.000 {method 'reshape' of 'numpy.ndarray' objects}
       12    0.000    0.000    0.000    0.000 {method 'rpartition' of 'str' objects}
      110    0.000    0.000    0.000    0.000 {method 'rstrip' of 'str' objects}
        2    0.000    0.000    0.000    0.000 {method 'search' of 're.Pattern' objects}
        1    0.000    0.000    0.000    0.000 {method 'set_noconvert' of 'pandas._libs.parsers.TextReader' objects}
        2    0.000    0.000    0.000    0.000 {method 'sort' of 'numpy.ndarray' objects}
        2    0.000    0.000    0.000    0.000 {method 'split' of 're.Pattern' objects}
       21    0.000    0.000    0.000    0.000 {method 'startswith' of 'str' objects}
        1    0.000    0.000    0.000    0.000 {method 'sum' of 'numpy.ndarray' objects}
        2    0.000    0.000    0.000    0.000 {method 'swapaxes' of 'numpy.ndarray' objects}
        6    0.022    0.004    0.022    0.004 {method 'take' of 'numpy.ndarray' objects}
        1    0.000    0.000    0.000    0.000 {method 'time' of 'datetime.datetime' objects}
        2    0.000    0.000    0.000    0.000 {method 'update' of 'dict' objects}
       14    0.000    0.000    0.000    0.000 {method 'upper' of 'str' objects}
       62    0.000    0.000    0.000    0.000 {method 'view' of 'numpy.ndarray' objects}
        1    0.000    0.000    0.000    0.000 {method 'writerow' of '_csv.writer' objects}
        2    0.006    0.003    0.006    0.003 {pandas._libs.algos.ensure_float64}
       13    0.000    0.000    0.000    0.000 {pandas._libs.algos.ensure_int64}
        9    0.000    0.000    0.000    0.000 {pandas._libs.algos.ensure_object}
       14    0.000    0.000    0.000    0.000 {pandas._libs.algos.ensure_platform_int}
        1    0.000    0.000    0.000    0.000 {pandas._libs.algos.take_1d_object_object}
        2    0.010    0.005    0.010    0.005 {pandas._libs.algos.take_2d_axis0_float64_float64}
        2    0.019    0.009    0.019    0.009 {pandas._libs.algos.take_2d_axis1_int64_int64}
        2    0.020    0.010    0.020    0.010 {pandas._libs.algos.take_2d_axis1_object_object}
        1    0.000    0.000    0.000    0.000 {pandas._libs.lib.array_equivalent_object}
        3    0.000    0.000    0.000    0.000 {pandas._libs.lib.clean_index_list}
        1    0.001    0.001    0.001    0.001 {pandas._libs.lib.generate_bins_dt64}
        1    0.000    0.000    0.000    0.000 {pandas._libs.lib.get_reverse_indexer}
        2    0.000    0.000    0.000    0.000 {pandas._libs.lib.infer_datetimelike_array}
        8    0.020    0.003    0.021    0.003 {pandas._libs.lib.infer_dtype}
        5    0.000    0.000    0.000    0.000 {pandas._libs.lib.is_bool}
       14    0.000    0.000    0.000    0.000 {pandas._libs.lib.is_float}
        8    0.000    0.000    0.000    0.000 {pandas._libs.lib.is_integer}
        8    0.000    0.000    0.000    0.000 {pandas._libs.lib.is_iterator}
       35    0.000    0.000    0.000    0.000 {pandas._libs.lib.is_list_like}
       46    0.000    0.000    0.000    0.000 {pandas._libs.lib.is_scalar}
        4    0.004    0.001    0.004    0.001 {pandas._libs.lib.maybe_indices_to_slice}
        1    0.023    0.023    0.023    0.023 {pandas._libs.tslib.format_array_from_datetime}
        1    0.016    0.016    0.016    0.016 {pandas._libs.tslibs.parsing.concat_date_cols}
        1    0.000    0.000    0.000    0.000 {pandas._libs.tslibs.timezones.infer_tzinfo}
        1    0.050    0.050    0.050    0.050 {pandas._libs.writers.write_csv_rows}


         12135 function calls (12023 primitive calls) in 2.217 seconds

   Ordered by: standard name

   ncalls  tottime  percall  cumtime  percall filename:lineno(function)
        4    0.000    0.000    0.000    0.000 <__array_function__ internals>:2(all)
       10    0.000    0.000    0.025    0.003 <__array_function__ internals>:2(concatenate)
        2    0.000    0.000    0.000    0.000 <__array_function__ internals>:2(copyto)
        1    0.000    0.000    0.000    0.000 <__array_function__ internals>:2(diff)
        2    0.000    0.000    0.000    0.000 <__array_function__ internals>:2(empty_like)
        2    0.000    0.000    0.001    0.000 <__array_function__ internals>:2(isclose)
        2    0.000    0.000    0.000    0.000 <__array_function__ internals>:2(min_scalar_type)
        2    0.000    0.000    0.000    0.000 <__array_function__ internals>:2(ndim)
        1    0.000    0.000    0.003    0.003 <__array_function__ internals>:2(repeat)
        2    0.000    0.000    0.000    0.000 <__array_function__ internals>:2(result_type)
        2    0.000    0.000    0.000    0.000 <__array_function__ internals>:2(sort)
        2    0.000    0.000    0.000    0.000 <__array_function__ internals>:2(zeros_like)
       23    0.000    0.000    0.000    0.000 <frozen importlib._bootstrap>:1017(_handle_fromlist)
        1    0.000    0.000    0.000    0.000 <frozen importlib._bootstrap>:103(release)
        1    0.000    0.000    0.000    0.000 <frozen importlib._bootstrap>:143(__init__)
        1    0.000    0.000    0.000    0.000 <frozen importlib._bootstrap>:147(__enter__)
        1    0.000    0.000    0.000    0.000 <frozen importlib._bootstrap>:151(__exit__)
        1    0.000    0.000    0.000    0.000 <frozen importlib._bootstrap>:157(_get_module_lock)
        1    0.000    0.000    0.000    0.000 <frozen importlib._bootstrap>:176(cb)
       55    0.000    0.000    0.000    0.000 <frozen importlib._bootstrap>:222(_verbose_message)
        1    0.000    0.000    0.000    0.000 <frozen importlib._bootstrap>:342(__init__)
        1    0.000    0.000    0.000    0.000 <frozen importlib._bootstrap>:58(__init__)
        1    0.000    0.000    0.000    0.000 <frozen importlib._bootstrap>:725(find_spec)
        1    0.000    0.000    0.000    0.000 <frozen importlib._bootstrap>:78(acquire)
        1    0.000    0.000    0.000    0.000 <frozen importlib._bootstrap>:800(find_spec)
        4    0.000    0.000    0.000    0.000 <frozen importlib._bootstrap>:863(__enter__)
        4    0.000    0.000    0.000    0.000 <frozen importlib._bootstrap>:867(__exit__)
        1    0.000    0.000    0.000    0.000 <frozen importlib._bootstrap>:881(_find_spec_legacy)
        1    0.000    0.000    0.002    0.002 <frozen importlib._bootstrap>:890(_find_spec)
        1    0.000    0.000    0.002    0.002 <frozen importlib._bootstrap>:956(_find_and_load_unlocked)
        1    0.000    0.000    0.002    0.002 <frozen importlib._bootstrap>:986(_find_and_load)
       12    0.000    0.000    0.000    0.000 <frozen importlib._bootstrap_external>:1265(_path_importer_cache)
        1    0.000    0.000    0.002    0.002 <frozen importlib._bootstrap_external>:1302(_get_spec)
        1    0.000    0.000    0.002    0.002 <frozen importlib._bootstrap_external>:1334(find_spec)
       11    0.000    0.000    0.002    0.000 <frozen importlib._bootstrap_external>:1431(find_spec)
       11    0.000    0.000    0.000    0.000 <frozen importlib._bootstrap_external>:36(_relax_case)
       55    0.000    0.000    0.000    0.000 <frozen importlib._bootstrap_external>:62(_path_join)
       55    0.000    0.000    0.000    0.000 <frozen importlib._bootstrap_external>:64(<listcomp>)
       11    0.000    0.000    0.001    0.000 <frozen importlib._bootstrap_external>:80(_path_stat)
        1    0.023    0.023    2.217    2.217 <ipython-input-8-9643e9d6306d>:14(detailVol_DS)
        1    0.000    0.000    2.217    2.217 <string>:1(<module>)
        2    0.000    0.000    0.000    0.000 <string>:1(__new__)
       39    0.000    0.000    0.000    0.000 _asarray.py:14(asarray)
        8    0.000    0.000    0.000    0.000 _asarray.py:221(require)
        8    0.000    0.000    0.000    0.000 _asarray.py:298(<setcomp>)
       10    0.000    0.000    0.000    0.000 _asarray.py:86(asanyarray)
       34    0.000    0.000    0.000    0.000 _dtype.py:24(_kind_name)
       34    0.000    0.000    0.000    0.000 _dtype.py:307(_name_includes_bit_suffix)
       34    0.000    0.000    0.001    0.000 _dtype.py:321(_name_get)
        1    0.000    0.000    0.000    0.000 _methods.py:45(_sum)
       15    0.000    0.000    0.001    0.000 _methods.py:53(_any)
        5    0.000    0.000    0.000    0.000 _methods.py:56(_all)
        4    0.000    0.000    0.021    0.005 _mixins.py:33(take)
       39    0.000    0.000    0.001    0.000 _mixins.py:70(shape)
       33    0.000    0.000    0.000    0.000 _mixins.py:74(__len__)
        5    0.000    0.000    0.000    0.000 _mixins.py:77(ndim)
        1    0.000    0.000    0.000    0.000 _mixins.py:93(ravel)
        1    0.000    0.000    0.000    0.000 _ranges.py:13(generate_regular_range)
        8    0.000    0.000    0.000    0.000 _ufunc_config.py:132(geterr)
        8    0.000    0.000    0.000    0.000 _ufunc_config.py:32(seterr)
        4    0.000    0.000    0.000    0.000 _ufunc_config.py:429(__init__)
        4    0.000    0.000    0.000    0.000 _ufunc_config.py:433(__enter__)
        4    0.000    0.000    0.000    0.000 _ufunc_config.py:438(__exit__)
        5    0.000    0.000    0.000    0.000 _validators.py:208(validate_bool_kwarg)
        2    0.000    0.000    0.000    0.000 abc.py:100(__subclasscheck__)
       42    0.000    0.000    0.000    0.000 abc.py:96(__instancecheck__)
        1    0.000    0.000    0.000    0.000 aggregation.py:235(maybe_mangle_lambdas)
        1    0.000    0.000    0.000    0.000 aggregation.py:30(reconstruct_func)
        7    0.000    0.000    0.000    0.000 algorithms.py:1487(_get_take_nd_function)
        4    0.000    0.000    0.021    0.005 algorithms.py:1523(take)
        7    0.002    0.000    0.067    0.010 algorithms.py:1616(take_nd)
        1    0.000    0.000    0.000    0.000 base.py:1032(__iter__)
       14    0.000    0.000    0.000    0.000 base.py:1175(name)
       13    0.000    0.000    0.000    0.000 base.py:1182(name)
        1    0.000    0.000    0.000    0.000 base.py:1378(nlevels)
        4    0.000    0.000    0.007    0.002 base.py:1571(is_monotonic)
        5    0.009    0.002    0.010    0.002 base.py:1578(is_monotonic_increasing)
        2    0.056    0.028    0.056    0.028 base.py:1646(is_unique)
        1    0.000    0.000    0.000    0.000 base.py:1685(is_boolean)
        1    0.000    0.000    0.000    0.000 base.py:1841(is_object)
        2    0.000    0.000    0.000    0.000 base.py:2000(inferred_type)
        3    0.000    0.000    0.000    0.000 base.py:2007(is_all_dates)
        1    0.000    0.000    0.000    0.000 base.py:201(_obj_with_exclusions)
       20    0.000    0.000    0.000    0.000 base.py:201(construct_from_string)
        1    0.000    0.000    0.033    0.033 base.py:251(_try_aggregate_string_function)
      243    0.000    0.000    0.002    0.000 base.py:256(is_dtype)
        1    0.000    0.000    0.033    0.033 base.py:281(_aggregate)
     12/6    0.000    0.000    0.003    0.000 base.py:293(__new__)
        1    0.000    0.000    0.000    0.000 base.py:2957(get_indexer)
        1    0.000    0.000    0.000    0.000 base.py:3115(_validate_positional_slice)
        1    0.000    0.000    0.000    0.000 base.py:3275(_can_reindex)
        1    0.000    0.000    0.000    0.000 base.py:3291(reindex)
       21    0.000    0.000    0.000    0.000 base.py:3870(_values)
        2    0.000    0.000    0.000    0.000 base.py:3896(_get_engine_target)
        6    0.000    0.000    0.000    0.000 base.py:4083(__getitem__)
      214    0.001    0.000    0.001    0.000 base.py:413(find)
        3    0.000    0.000    0.000    0.000 base.py:4196(equals)
        2    0.000    0.000    0.000    0.000 base.py:424(<genexpr>)
        1    0.000    0.000    0.000    0.000 base.py:4275(identical)
        2    0.000    0.000    0.005    0.003 base.py:4529(argsort)
        6    0.000    0.000    0.000    0.000 base.py:463(_simple_new)
        1    0.000    0.000    0.000    0.000 base.py:4717(_maybe_promote)
        2    0.000    0.000    0.000    0.000 base.py:498(_shallow_copy)
        3    0.000    0.000    0.000    0.000 base.py:4985(_validate_indexer)
        3    0.000    0.000    0.000    0.000 base.py:520(is_)
       19    0.000    0.000    0.000    0.000 base.py:544(_reset_identity)
        1    0.000    0.000    0.000    0.000 base.py:5517(ensure_index_from_sequences)
        4    0.000    0.000    0.000    0.000 base.py:554(_engine)
       26    0.000    0.000    0.002    0.000 base.py:5557(ensure_index)
        5    0.000    0.000    0.000    0.000 base.py:561(<lambda>)
        1    0.000    0.000    0.000    0.000 base.py:5621(ensure_has_len)
        1    0.000    0.000    0.000    0.000 base.py:563(_get_cython_func)
       38    0.000    0.000    0.000    0.000 base.py:5654(maybe_extract_name)
       54    0.000    0.000    0.001    0.000 base.py:567(__len__)
        4    0.000    0.000    0.000    0.000 base.py:5670(_maybe_cast_with_dtype)
        4    0.000    0.000    0.000    0.000 base.py:5724(_maybe_cast_data_without_dtype)
        1    0.000    0.000    0.000    0.000 base.py:573(__array__)
        2    0.000    0.000    0.000    0.000 base.py:5838(_maybe_asobject)
        4    0.000    0.000    0.000    0.000 base.py:590(dtype)
        1    0.000    0.000    0.000    0.000 base.py:669(size)
        6    0.000    0.000    0.021    0.004 base.py:701(take)
        6    0.000    0.000    0.021    0.004 base.py:723(_assert_take_fillable)
        1    0.000    0.000    0.000    0.000 base.py:743(to_numpy)
        1    0.000    0.000    0.000    0.000 base.py:854(empty)
        2    0.000    0.000    0.022    0.011 base.py:954(to_native_types)
        1    0.000    0.000    0.000    0.000 base.py:984(_format_native_types)
        2    0.000    0.000    0.000    0.000 blocks.py:111(_simple_new)
        7    0.000    0.000    0.068    0.010 blocks.py:1238(take_nd)
       19    0.000    0.000    0.000    0.000 blocks.py:124(__init__)
       19    0.000    0.000    0.000    0.000 blocks.py:135(_check_ndim)
        2    0.000    0.000    0.036    0.018 blocks.py:1938(to_native_types)
        6    0.000    0.000    0.000    0.000 blocks.py:201(internal_values)
        6    0.000    0.000    0.000    0.000 blocks.py:229(fill_value)
       48    0.000    0.000    0.000    0.000 blocks.py:233(mgr_locs)
       23    0.000    0.000    0.000    0.000 blocks.py:237(mgr_locs)
        6    0.000    0.000    0.000    0.000 blocks.py:2374(__init__)
        2    0.000    0.000    0.000    0.000 blocks.py:244(make_block)
       11    0.000    0.000    0.000    0.000 blocks.py:256(make_block_same_class)
       14    0.000    0.000    0.001    0.000 blocks.py:2655(get_block_type)
        8    0.000    0.000    0.001    0.000 blocks.py:2701(make_block)
        2    0.000    0.000    0.000    0.000 blocks.py:2728(_extend_blocks)
        2    0.000    0.000    0.000    0.000 blocks.py:287(_slice)
        2    0.000    0.000    0.000    0.000 blocks.py:292(getitem_block)
        5    0.000    0.000    0.000    0.000 blocks.py:311(shape)
       13    0.000    0.000    0.000    0.000 blocks.py:315(dtype)
        2    0.000    0.000    0.000    0.000 blocks.py:619(convert)
        4    0.000    0.000    0.000    0.000 blocks.py:675(copy)
        7    0.000    0.000    0.000    0.000 cast.py:1185(maybe_castable)
        5    0.000    0.000    0.000    0.000 cast.py:1199(maybe_infer_to_datetimelike)
        8    0.000    0.000    0.000    0.000 cast.py:1308(maybe_cast_to_datetime)
        5    0.000    0.000    0.000    0.000 cast.py:1568(construct_1d_object_array_from_listlike)
        5    0.000    0.000    0.000    0.000 cast.py:1593(construct_1d_ndarray_preserving_na)
        2    0.000    0.000    0.001    0.000 cast.py:184(maybe_downcast_numeric)
        2    0.000    0.000    0.000    0.000 cast.py:300(maybe_cast_result_dtype)
        8    0.000    0.000    0.000    0.000 cast.py:442(maybe_promote)
        8    0.000    0.000    0.000    0.000 cast.py:598(_ensure_dtype_type)
        1    0.000    0.000    0.000    0.000 codecs.py:186(__init__)
        9    0.000    0.000    0.000    0.000 common.py:1025(is_datetime_or_timedelta_dtype)
        1    0.000    0.000    0.000    0.000 common.py:111(ensure_int_or_float)
        8    0.000    0.000    0.000    0.000 common.py:1180(needs_i8_conversion)
        2    0.000    0.000    0.000    0.000 common.py:1223(is_numeric_dtype)
        2    0.000    0.000    0.000    0.000 common.py:1265(is_string_like_dtype)
        2    0.000    0.000    0.000    0.000 common.py:1293(<lambda>)
       50    0.000    0.000    0.000    0.000 common.py:1296(is_float_dtype)
       40    0.000    0.000    0.001    0.000 common.py:1330(is_bool_dtype)
        2    0.000    0.000    0.000    0.000 common.py:140(is_fsspec_url)
      210    0.001    0.000    0.001    0.000 common.py:1460(is_extension_array_dtype)
        6    0.000    0.000    0.000    0.000 common.py:149(cast_scalar_indexer)
        1    0.000    0.000    0.000    0.000 common.py:1509(is_complex_dtype)
        2    0.000    0.000    0.000    0.000 common.py:152(get_filepath_or_buffer)
       18    0.000    0.000    0.000    0.000 common.py:1541(_is_dtype)
       98    0.000    0.000    0.000    0.000 common.py:1565(_get_dtype)
      216    0.000    0.000    0.001    0.000 common.py:1600(_is_dtype_type)
       39    0.000    0.000    0.000    0.000 common.py:1733(pandas_dtype)
      126    0.000    0.000    0.000    0.000 common.py:178(classes)
      126    0.000    0.000    0.000    0.000 common.py:180(<lambda>)
       90    0.000    0.000    0.000    0.000 common.py:183(classes_and_not_datetimelike)
       90    0.000    0.000    0.000    0.000 common.py:188(<lambda>)
       53    0.000    0.000    0.000    0.000 common.py:194(is_object_dtype)
        1    0.000    0.000    0.000    0.000 common.py:211(count_not_none)
        5    0.000    0.000    0.000    0.000 common.py:215(<genexpr>)
       10    0.000    0.000    0.000    0.000 common.py:218(asarray_tuplesafe)
       16    0.000    0.000    0.000    0.000 common.py:224(is_sparse)
        2    0.000    0.000    0.000    0.000 common.py:269(get_compression_method)
        2    0.000    0.000    0.000    0.000 common.py:274(maybe_iterable_to_list)
        3    0.000    0.000    0.000    0.000 common.py:302(infer_compression)
        1    0.000    0.000    0.000    0.000 common.py:329(apply_if_callable)
       17    0.000    0.000    0.000    0.000 common.py:348(is_datetime64_dtype)
        1    0.000    0.000    0.003    0.003 common.py:356(get_handle)
       47    0.000    0.000    0.000    0.000 common.py:381(is_datetime64tz_dtype)
       35    0.000    0.000    0.000    0.000 common.py:422(is_timedelta64_dtype)
       61    0.000    0.000    0.001    0.000 common.py:456(is_period_dtype)
        2    0.000    0.000    0.000    0.000 common.py:49(is_url)
       41    0.000    0.000    0.000    0.000 common.py:492(is_interval_dtype)
      120    0.000    0.000    0.002    0.000 common.py:530(is_categorical_dtype)
       16    0.000    0.000    0.000    0.000 common.py:566(is_string_dtype)
       16    0.000    0.000    0.000    0.000 common.py:595(condition)
        3    0.000    0.000    0.000    0.000 common.py:598(is_excluded_dtype)
       12    0.000    0.000    0.000    0.000 common.py:603(<genexpr>)
       19    0.000    0.000    0.000    0.000 common.py:608(is_dtype_equal)
        7    0.000    0.000    0.000    0.000 common.py:67(_expand_user)
       72    0.000    0.000    0.001    0.000 common.py:696(is_integer_dtype)
        8    0.000    0.000    0.000    0.000 common.py:750(is_signed_integer_dtype)
        8    0.000    0.000    0.000    0.000 common.py:806(is_unsigned_integer_dtype)
        1    0.000    0.000    0.000    0.000 common.py:88(validate_header_arg)
       24    0.000    0.000    0.000    0.000 common.py:905(is_datetime64_any_dtype)
        2    0.000    0.000    0.000    0.000 common.py:947(is_datetime64_ns_dtype)
        3    0.000    0.000    0.000    0.000 common.py:97(is_bool_indexer)
        5    0.000    0.000    0.000    0.000 common.py:97(stringify_path)
        1    0.000    0.000    0.046    0.046 construction.py:237(init_dict)
        1    0.000    0.000    0.021    0.021 construction.py:329(_homogenize)
       17    0.000    0.000    0.000    0.000 construction.py:339(extract_array)
        9    0.000    0.000    0.021    0.002 construction.py:390(sanitize_array)
        9    0.000    0.000    0.001    0.000 construction.py:520(_try_cast)
        7    0.000    0.000    0.000    0.000 construction.py:580(is_empty_data)
        1    0.000    0.000    0.043    0.043 construction.py:60(arrays_to_mgr)
        2    0.000    0.000    0.002    0.001 construction.py:600(create_series_with_explicit_dtype)
        1    0.000    0.000    0.109    0.109 csvs.py:158(save)
        1    0.000    0.000    0.000    0.000 csvs.py:233(_save_header)
        1    0.000    0.000    0.106    0.106 csvs.py:313(_save)
        1    0.000    0.000    0.105    0.105 csvs.py:330(_save_chunk)
        1    0.000    0.000    0.001    0.001 csvs.py:34(__init__)
        1    0.000    0.000    0.002    0.002 datetimelike.py:1000(_hasnans)
       20    0.000    0.000    0.000    0.000 datetimelike.py:1082(freq)
        1    0.003    0.003    0.062    0.062 datetimelike.py:1106(inferred_freq)
        1    0.000    0.000    0.000    0.000 datetimelike.py:1670(validate_periods)
        1    0.000    0.000    0.000    0.000 datetimelike.py:1696(validate_endpoints)
        8    0.000    0.000    0.000    0.000 datetimelike.py:1729(validate_inferred_freq)
        8    0.000    0.000    0.000    0.000 datetimelike.py:1764(maybe_infer_freq)
        4    0.000    0.000    0.025    0.006 datetimelike.py:181(take)
        1    0.000    0.000    0.006    0.006 datetimelike.py:224(min)
        1    0.000    0.000    0.000    0.000 datetimelike.py:281(max)
       44    0.000    0.000    0.000    0.000 datetimelike.py:464(_ndarray)
        5    0.000    0.000    0.000    0.000 datetimelike.py:469(_from_backing_data)
       55    0.000    0.000    0.000    0.000 datetimelike.py:491(asi8)
        2    0.000    0.000    0.000    0.000 datetimelike.py:524(__array__)
        4    0.000    0.000    0.000    0.000 datetimelike.py:530(__getitem__)
        3    0.000    0.000    0.000    0.000 datetimelike.py:564(_get_getitem_freq)
        1    0.000    0.000    0.000    0.000 datetimelike.py:622(astype)
        4    0.000    0.000    0.000    0.000 datetimelike.py:640(_shallow_copy)
        3    0.000    0.000    0.000    0.000 datetimelike.py:711(_values_for_argsort)
        1    0.001    0.001    0.001    0.001 datetimelike.py:993(_isnan)
        1    0.000    0.000    0.001    0.001 datetimes.py:135(_maybe_cache)
        1    0.000    0.000    0.000    0.000 datetimes.py:175(_box_as_indexlike)
        8    0.000    0.000    0.001    0.000 datetimes.py:1871(sequence_to_dt64ns)
        1    0.000    0.000    0.644    0.644 datetimes.py:2002(objects_to_datetime64ns)
        9    0.000    0.000    0.001    0.000 datetimes.py:2085(maybe_convert_dtype)
        5    0.000    0.000    0.000    0.000 datetimes.py:214(__init__)
       13    0.000    0.000    0.000    0.000 datetimes.py:2178(_validate_dt64_dtype)
       16    0.000    0.000    0.000    0.000 datetimes.py:2220(validate_tz_from_dtype)
        1    0.000    0.000    0.000    0.000 datetimes.py:2267(_infer_tz_from_endpoints)
        1    0.000    0.000    0.000    0.000 datetimes.py:2310(_maybe_normalize_endpoints)
        8    0.000    0.000    0.002    0.000 datetimes.py:246(__new__)
        1    0.000    0.000    0.645    0.645 datetimes.py:259(_convert_listlike_datetimes)
       13    0.000    0.000    0.000    0.000 datetimes.py:285(_simple_new)
       13    0.000    0.000    0.000    0.000 datetimes.py:286(_simple_new)
        8    0.000    0.000    0.001    0.000 datetimes.py:299(_from_sequence)
        1    0.000    0.000    0.000    0.000 datetimes.py:344(_generate_range)
        3    0.000    0.000    0.000    0.000 datetimes.py:474(_box_func)
        3    0.000    0.000    0.000    0.000 datetimes.py:476(<lambda>)
       77    0.000    0.000    0.000    0.000 datetimes.py:478(dtype)
        9    0.000    0.000    0.000    0.000 datetimes.py:500(tz)
        2    0.000    0.000    0.000    0.000 datetimes.py:542(__array__)
        1    0.000    0.000    0.000    0.000 datetimes.py:572(astype)
       10    0.000    0.000    0.000    0.000 datetimes.py:58(tz_to_dtype)
        1    0.000    0.000    0.022    0.022 datetimes.py:604(_format_native_types)
        1    0.000    0.000    0.646    0.646 datetimes.py:605(to_datetime)
        1    0.000    0.000    0.000    0.000 datetimes.py:79(should_cache)
        1    0.000    0.000    0.000    0.000 datetimes.py:849(date_range)
        2    0.000    0.000    0.000    0.000 dtype.py:187(construct_from_string)
        2    0.000    0.000    0.000    0.000 dtypes.py:1062(construct_from_string)
       32    0.000    0.000    0.000    0.000 dtypes.py:1116(is_dtype)
        2    0.000    0.000    0.000    0.000 dtypes.py:281(construct_from_string)
        2    0.000    0.000    0.000    0.000 dtypes.py:694(construct_from_string)
        2    0.000    0.000    0.000    0.000 dtypes.py:853(construct_from_string)
       53    0.000    0.000    0.001    0.000 dtypes.py:903(is_dtype)
        4    0.000    0.000    0.001    0.000 extension.py:214(__getitem__)
        3    0.000    0.000    0.000    0.000 extension.py:228(_get_engine_target)
        1    0.000    0.000    0.001    0.001 extension.py:269(astype)
        2    0.000    0.000    0.063    0.032 extension.py:44(cached)
       21    0.000    0.000    0.000    0.000 extension.py:53(fget)
        1    0.000    0.000    0.022    0.022 extension.py:77(method)
        1    0.000    0.000    0.001    0.001 format.py:1574(_is_dates_only)
        1    0.000    0.000    0.001    0.001 format.py:1637(_get_format_datetime64_from_values)
        6    0.000    0.000    0.000    0.000 frame.py:421(_constructor)
        7    0.000    0.000    0.046    0.007 frame.py:441(__init__)
        1    0.000    0.000    0.000    0.000 frame.py:585(shape)
        1    0.000    0.000    0.000    0.000 frame.py:6397(groupby)
        1    0.000    0.000    0.059    0.059 frequencies.py:120(infer_freq)
        1    0.000    0.000    0.003    0.003 frequencies.py:191(__init__)
        1    0.000    0.000    0.056    0.056 frequencies.py:230(get_freq)
        1    0.000    0.000    0.000    0.000 frequencies.py:492(is_superperiod)
        2    0.000    0.000    0.000    0.000 frequencies.py:550(_maybe_coerce_freq)
        1    0.000    0.000    0.000    0.000 frequencies.py:575(_is_annual)
        1    0.000    0.000    0.000    0.000 frequencies.py:580(_is_quarterly)
        1    0.000    0.000    0.000    0.000 frequencies.py:585(_is_monthly)
        1    0.000    0.000    0.000    0.000 frequencies.py:590(_is_weekly)
        4    0.000    0.000    0.000    0.000 fromnumeric.py:2333(_all_dispatcher)
        4    0.000    0.000    0.000    0.000 fromnumeric.py:2337(all)
        2    0.000    0.000    0.000    0.000 fromnumeric.py:3071(_ndim_dispatcher)
        2    0.000    0.000    0.000    0.000 fromnumeric.py:3075(ndim)
        1    0.000    0.000    0.000    0.000 fromnumeric.py:433(_repeat_dispatcher)
        1    0.000    0.000    0.003    0.003 fromnumeric.py:437(repeat)
        1    0.000    0.000    0.003    0.003 fromnumeric.py:52(_wrapfunc)
        4    0.000    0.000    0.000    0.000 fromnumeric.py:70(_wrapreduction)
        4    0.000    0.000    0.000    0.000 fromnumeric.py:71(<dictcomp>)
        2    0.000    0.000    0.000    0.000 fromnumeric.py:835(_sort_dispatcher)
        2    0.000    0.000    0.000    0.000 fromnumeric.py:839(sort)
        1    0.000    0.000    0.000    0.000 function.py:384(validate_resampler_func)
        2    0.000    0.000    0.000    0.000 function.py:400(validate_minmax_axis)
        9    0.000    0.000    0.000    0.000 function.py:48(__call__)
        1    0.000    0.000    0.000    0.000 function_base.py:1148(_diff_dispatcher)
        1    0.000    0.000    0.000    0.000 function_base.py:1152(diff)
      981    0.001    0.000    0.001    0.000 generic.py:10(_check)
        1    0.000    0.000    0.033    0.033 generic.py:1018(_cython_agg_general)
        1    0.000    0.000    0.032    0.032 generic.py:1026(_cython_agg_blocks)
        1    0.000    0.000    0.000    0.000 generic.py:11556(logical_func)
        1    0.000    0.000    0.000    0.000 generic.py:1696(_get_data_to_aggregate)
        1    0.000    0.000    0.001    0.001 generic.py:1781(_wrap_agged_blocks)
       13    0.000    0.000    0.000    0.000 generic.py:195(__init__)
        8    0.000    0.000    0.000    0.000 generic.py:232(attrs)
        4    0.000    0.000    0.000    0.000 generic.py:249(_validate_dtype)
        1    0.000    0.000    0.110    0.110 generic.py:2994(to_csv)
        2    0.000    0.000    0.088    0.044 generic.py:3256(take)
        1    0.000    0.000    0.000    0.000 generic.py:334(_construct_axes_from_arguments)
        1    0.000    0.000    0.001    0.001 generic.py:3551(_slice)
        1    0.000    0.000    0.000    0.000 generic.py:3582(_set_is_copy)
        1    0.000    0.000    0.000    0.000 generic.py:362(<dictcomp>)
       15    0.000    0.000    0.000    0.000 generic.py:365(_get_axis_number)
        6    0.000    0.000    0.000    0.000 generic.py:377(_get_axis)
        4    0.000    0.000    0.000    0.000 generic.py:382(_get_block_manager_axis)
        1    0.000    0.000    0.001    0.001 generic.py:4214(reindex)
        2    0.000    0.000    0.000    0.000 generic.py:4447(<genexpr>)
        1    0.000    0.000    0.001    0.001 generic.py:4465(_reindex_axes)
        1    0.000    0.000    0.000    0.000 generic.py:4502(_reindex_with_indexers)
        8    0.000    0.000    0.000    0.000 generic.py:5095(__finalize__)
        6    0.000    0.000    0.000    0.000 generic.py:5123(__getattr__)
       10    0.000    0.000    0.000    0.000 generic.py:5141(__setattr__)
        4    0.000    0.000    0.000    0.000 generic.py:5197(_protect_consolidate)
        3    0.000    0.000    0.000    0.000 generic.py:5208(_consolidate_inplace)
        3    0.000    0.000    0.000    0.000 generic.py:5211(f)
        1    0.000    0.000    0.000    0.000 generic.py:5216(_consolidate)
        1    0.000    0.000    0.000    0.000 generic.py:5234(<lambda>)
        1    0.000    0.000    0.000    0.000 generic.py:5679(_convert)
        1    0.000    0.000    0.000    0.000 generic.py:7060(isna)
        1    0.000    0.000    0.116    0.116 generic.py:7692(resample)
        1    0.000    0.000    0.033    0.033 generic.py:937(aggregate)
        1    0.000    0.000    0.033    0.033 groupby.py:1343(mean)
        1    0.000    0.000    0.001    0.001 groupby.py:2670(_reindex_output)
        1    0.000    0.000    0.000    0.000 groupby.py:483(__init__)
        1    0.000    0.000    0.000    0.000 groupby.py:632(_selected_obj)
        1    0.000    0.000    0.000    0.000 groupby.py:697(__getattr__)
        1    0.000    0.000    0.000    0.000 grouper.py:227(__new__)
        1    0.000    0.000    0.000    0.000 grouper.py:270(__init__)
        3    0.000    0.000    0.000    0.000 grouper.py:286(ax)
        2    0.009    0.004    0.115    0.058 grouper.py:314(_set_grouper)
        1    0.000    0.000    0.001    0.001 grouper.py:413(__init__)
        1    0.000    0.000    0.000    0.000 grouper.py:605(get_grouper)
        1    0.000    0.000    0.000    0.000 grouper.py:829(_convert_grouper)
        1    0.000    0.000    0.000    0.000 index_tricks.py:316(__getitem__)
        2    0.004    0.002    0.004    0.002 indexers.py:210(maybe_convert_indices)
        1    0.000    0.000    0.000    0.000 indexers.py:298(deprecate_ndim_indexing)
        3    0.000    0.000    0.000    0.000 indexers.py:348(check_array_indexer)
        1    0.000    0.000    0.000    0.000 indexing.py:100(iloc)
        1    0.000    0.000    0.001    0.001 indexing.py:1474(_getitem_axis)
        1    0.000    0.000    0.001    0.001 indexing.py:1500(_get_slice_axis)
        1    0.000    0.000    0.000    0.000 indexing.py:2270(need_slice)
        1    0.000    0.000    0.001    0.001 indexing.py:864(__getitem__)
        7    0.000    0.000    0.000    0.000 inference.py:185(is_array_like)
        6    0.000    0.000    0.000    0.000 inference.py:263(is_dict_like)
       20    0.000    0.000    0.000    0.000 inference.py:289(<genexpr>)
       51    0.000    0.000    0.000    0.000 inference.py:322(is_hashable)
        1    0.000    0.000    0.000    0.000 inference.py:96(is_file_like)
        3    0.000    0.000    0.068    0.023 managers.py:1238(reindex_indexer)
        2    0.000    0.000    0.068    0.034 managers.py:1284(<listcomp>)
        1    0.000    0.000    0.000    0.000 managers.py:1300(_slice_take_blocks_ax0)
        7    0.000    0.000    0.000    0.000 managers.py:132(__init__)
        7    0.000    0.000    0.000    0.000 managers.py:138(<listcomp>)
        2    0.002    0.001    0.087    0.044 managers.py:1427(take)
        4    0.000    0.000    0.000    0.000 managers.py:1532(__init__)
        1    0.000    0.000    0.000    0.000 managers.py:1553(from_blocks)
        4    0.000    0.000    0.000    0.000 managers.py:156(from_blocks)
        3    0.000    0.000    0.000    0.000 managers.py:1564(from_array)
        6    0.000    0.000    0.000    0.000 managers.py:1575(_block)
        6    0.000    0.000    0.000    0.000 managers.py:1613(internal_values)
        1    0.000    0.000    0.000    0.000 managers.py:1621(is_consolidated)
        1    0.000    0.000    0.000    0.000 managers.py:1627(_consolidate_inplace)
        1    0.000    0.000    0.022    0.022 managers.py:1675(create_block_manager_from_arrays)
        3    0.000    0.000    0.000    0.000 managers.py:1680(<genexpr>)
        1    0.000    0.000    0.021    0.021 managers.py:1715(form_blocks)
        1    0.000    0.000    0.011    0.011 managers.py:1812(_simple_blockify)
        2    0.000    0.000    0.010    0.005 managers.py:1827(_multi_blockify)
        4    0.000    0.000    0.000    0.000 managers.py:1830(<lambda>)
        3    0.014    0.005    0.020    0.007 managers.py:1843(_stack_arrays)
        6    0.000    0.000    0.000    0.000 managers.py:1846(_asarray_compat)
        3    0.000    0.000    0.000    0.000 managers.py:1852(_shape_compat)
        1    0.000    0.000    0.000    0.000 managers.py:2015(_preprocess_slice_or_indexer)
        6    0.000    0.000    0.000    0.000 managers.py:212(shape)
       17    0.000    0.000    0.000    0.000 managers.py:214(<genexpr>)
       19    0.000    0.000    0.000    0.000 managers.py:216(ndim)
        4    0.000    0.000    0.000    0.000 managers.py:259(items)
        2    0.000    0.000    0.000    0.000 managers.py:321(_verify_integrity)
        7    0.000    0.000    0.000    0.000 managers.py:323(<genexpr>)
        1    0.000    0.000    0.000    0.000 managers.py:366(apply)
        1    0.000    0.000    0.000    0.000 managers.py:385(<dictcomp>)
        1    0.000    0.000    0.000    0.000 managers.py:597(convert)
        8    0.000    0.000    0.000    0.000 managers.py:675(is_consolidated)
        1    0.000    0.000    0.000    0.000 managers.py:683(_consolidate_check)
        1    0.000    0.000    0.000    0.000 managers.py:684(<listcomp>)
        1    0.000    0.000    0.000    0.000 managers.py:728(get_numeric_data)
        1    0.000    0.000    0.000    0.000 managers.py:735(<listcomp>)
        1    0.000    0.000    0.000    0.000 managers.py:737(_combine)
        1    0.000    0.000    0.000    0.000 managers.py:743(<listcomp>)
        1    0.000    0.000    0.001    0.001 managers.py:757(get_slice)
        1    0.000    0.000    0.000    0.000 managers.py:763(<listcomp>)
        4    0.000    0.000    0.000    0.000 managers.py:961(consolidate)
        5    0.000    0.000    0.000    0.000 managers.py:977(_consolidate_inplace)
       13    0.000    0.000    0.001    0.000 missing.py:130(_isna)
        6    0.000    0.000    0.001    0.000 missing.py:193(_isna_ndarraylike)
        2    0.000    0.000    0.000    0.000 missing.py:235(_isna_string_dtype)
        1    0.000    0.000    0.000    0.000 missing.py:255(notna)
        2    0.000    0.000    0.000    0.000 missing.py:341(_isna_compat)
        3    0.000    0.000    0.000    0.000 missing.py:358(array_equivalent)
        1    0.000    0.000    0.000    0.000 missing.py:456(_array_equivalent_object)
       13    0.000    0.000    0.001    0.000 missing.py:47(isna)
        2    0.000    0.000    0.000    0.000 missing.py:507(_maybe_fill)
        2    0.000    0.000    0.000    0.000 missing.py:665(clean_reindex_fill_method)
        2    0.000    0.000    0.000    0.000 missing.py:75(clean_fill_method)
        2    0.000    0.000    0.000    0.000 multiarray.py:1043(copyto)
       10    0.000    0.000    0.000    0.000 multiarray.py:143(concatenate)
        2    0.000    0.000    0.000    0.000 multiarray.py:583(min_scalar_type)
        2    0.000    0.000    0.000    0.000 multiarray.py:634(result_type)
        2    0.000    0.000    0.000    0.000 multiarray.py:75(empty_like)
        1    0.000    0.000    0.000    0.000 nanops.py:168(_get_fill_value)
        1    0.000    0.000    0.000    0.000 nanops.py:193(_maybe_get_mask)
        1    0.000    0.000    0.000    0.000 nanops.py:237(_get_values)
        1    0.000    0.000    0.000    0.000 nanops.py:322(_na_ok_dtype)
        1    0.000    0.000    0.000    0.000 nanops.py:396(nanany)
        7    0.000    0.000    0.000    0.000 ntpath.py:289(expanduser)
        1    0.000    0.000    0.000    0.000 numba_.py:17(maybe_use_numba)
        2    0.000    0.000    0.000    0.000 numeric.py:2193(_isclose_dispatcher)
        2    0.000    0.000    0.001    0.000 numeric.py:2197(isclose)
        2    0.000    0.000    0.000    0.000 numeric.py:2274(within_tol)
        2    0.000    0.000    0.000    0.000 numeric.py:71(_zeros_like_dispatcher)
        2    0.000    0.000    0.000    0.000 numeric.py:75(zeros_like)
       30    0.000    0.000    0.000    0.000 numerictypes.py:286(issubclass_)
       15    0.000    0.000    0.000    0.000 numerictypes.py:360(issubdtype)
        2    0.000    0.000    0.000    0.000 numerictypes.py:545(_can_coerce_all)
        1    0.000    0.000    0.000    0.000 numerictypes.py:569(find_common_type)
        1    0.000    0.000    0.000    0.000 numerictypes.py:621(<listcomp>)
        1    0.000    0.000    0.000    0.000 numerictypes.py:622(<listcomp>)
        1    0.000    0.000    0.000    0.000 ops.py:295(ngroups)
        3    0.000    0.000    0.000    0.000 ops.py:366(_get_cython_function)
        2    0.000    0.000    0.007    0.004 ops.py:402(_get_cython_func_and_vals)
        2    0.003    0.002    0.028    0.014 ops.py:436(_cython_operation)
        2    0.002    0.001    0.030    0.015 ops.py:581(aggregate)
        2    0.012    0.006    0.012    0.006 ops.py:591(_aggregate)
        1    0.000    0.000    0.000    0.000 ops.py:753(__init__)
        1    0.000    0.000    0.005    0.005 ops.py:833(group_info)
        1    0.000    0.000    0.000    0.000 ops.py:856(result_index)
        1    0.000    0.000    0.000    0.000 ops.py:863(levels)
        1    0.000    0.000    0.000    0.000 ops.py:867(names)
        1    0.000    0.000    0.001    0.001 ops.py:871(groupings)
        1    0.000    0.000    0.001    0.001 ops.py:873(<listcomp>)
        4    0.000    0.000    0.000    0.000 parse.py:110(_coerce_args)
        2    0.000    0.000    0.000    0.000 parse.py:366(urlparse)
        2    0.000    0.000    0.000    0.000 parse.py:417(urlsplit)
        4    0.000    0.000    0.000    0.000 parse.py:99(_noop)
        1    0.000    0.000    0.000    0.000 parsers.py:1005(_clean_options)
        1    0.000    0.000    0.008    0.008 parsers.py:1176(_make_engine)
        1    0.000    0.000    1.835    1.835 parsers.py:1194(read)
        1    0.000    0.000    0.000    0.000 parsers.py:1219(_create_index)
        4    0.000    0.000    0.000    0.000 parsers.py:1233(_is_index_col)
        3    0.000    0.000    0.000    0.000 parsers.py:1237(_is_potential_multi_index)
        6    0.000    0.000    0.000    0.000 parsers.py:1261(<genexpr>)
        1    0.000    0.000    0.000    0.000 parsers.py:1339(_validate_usecols_arg)
        1    0.000    0.000    0.000    0.000 parsers.py:1389(_validate_parse_dates_arg)
        1    0.000    0.000    0.000    0.000 parsers.py:1412(__init__)
        1    0.000    0.000    0.000    0.000 parsers.py:1499(_validate_parse_dates_presence)
        2    0.000    0.000    0.000    0.000 parsers.py:1526(<genexpr>)
        1    0.000    0.000    0.000    0.000 parsers.py:1535(<setcomp>)
        2    0.000    0.000    0.000    0.000 parsers.py:1551(_has_complex_date_col)
        1    0.000    0.000    0.000    0.000 parsers.py:1559(_should_parse_dates)
        1    0.000    0.000    0.000    0.000 parsers.py:1637(_maybe_dedup_names)
        2    0.000    0.000    0.000    0.000 parsers.py:1665(_maybe_make_multi_index_columns)
        1    0.000    0.000    0.668    0.668 parsers.py:1671(_make_index)
        1    0.000    0.000    0.000    0.000 parsers.py:1699(_get_simple_index)
        1    0.000    0.000    0.000    0.000 parsers.py:1700(ix)
        1    0.005    0.005    0.668    0.668 parsers.py:1748(_agg_index)
        1    0.000    0.000    0.000    0.000 parsers.py:1853(_infer_types)
        1    0.000    0.000    0.000    0.000 parsers.py:1959(_do_date_conversions)
        1    0.008    0.008    0.008    0.008 parsers.py:1981(__init__)
        1    0.000    0.000    0.002    0.002 parsers.py:2087(close)
        1    0.000    0.000    0.000    0.000 parsers.py:2097(_set_noconvert_columns)
        1    0.000    0.000    0.000    0.000 parsers.py:2118(_set)
        1    0.000    0.000    1.788    1.788 parsers.py:2153(read)
        1    0.000    0.000    0.000    0.000 parsers.py:2226(<listcomp>)
        1    0.000    0.000    0.000    0.000 parsers.py:2228(<dictcomp>)
        1    0.000    0.000    0.000    0.000 parsers.py:3335(_make_date_converter)
        1    0.000    0.000    0.663    0.663 parsers.py:3338(converter)
        1    0.000    0.000    0.000    0.000 parsers.py:3380(_process_date_conversion)
        1    0.000    0.000    0.000    0.000 parsers.py:3389(_isindex)
        1    0.000    0.000    0.000    0.000 parsers.py:3468(_clean_na_values)
        1    0.000    0.000    0.000    0.000 parsers.py:3505(_clean_index_names)
        2    0.000    0.000    0.000    0.000 parsers.py:369(_validate_integer)
        1    0.000    0.000    0.000    0.000 parsers.py:398(_validate_names)
        1    0.019    0.019    1.863    1.863 parsers.py:420(_read)
        1    0.000    0.000    1.863    1.863 parsers.py:533(read_csv)
        1    0.000    0.000    0.008    0.008 parsers.py:856(__init__)
        1    0.000    0.000    0.002    0.002 parsers.py:948(close)
        1    0.000    0.000    0.000    0.000 parsers.py:951(_get_options_with_defaults)
        1    0.000    0.000    0.000    0.000 parsers.py:989(_check_file_or_buffer)
        2    0.000    0.000    0.000    0.000 re.py:223(split)
        2    0.000    0.000    0.000    0.000 re.py:289(_compile)
        1    0.000    0.000    0.010    0.010 resample.py:1004(_get_binner_for_time)
        1    0.000    0.000    0.105    0.105 resample.py:1011(_downsample)
        2    0.000    0.000    0.000    0.000 resample.py:107(__getattr__)
        1    0.000    0.000    0.000    0.000 resample.py:1102(_wrap_result)
        1    0.000    0.000    0.116    0.116 resample.py:1264(get_resampler)
        1    0.000    0.000    0.001    0.001 resample.py:1313(__init__)
        1    0.000    0.000    0.000    0.000 resample.py:133(obj)
        2    0.000    0.000    0.000    0.000 resample.py:137(ax)
        1    0.000    0.000    0.115    0.115 resample.py:1405(_get_resampler)
        1    0.000    0.000    0.010    0.010 resample.py:1446(_get_time_bins)
        1    0.000    0.000    0.001    0.001 resample.py:1509(_adjust_bin_edges)
        1    0.000    0.000    0.000    0.000 resample.py:161(_convert_obj)
        1    0.000    0.000    0.000    0.000 resample.py:1668(_get_timestamp_range_edges)
        1    0.000    0.000    0.010    0.010 resample.py:179(_set_binner)
        1    0.000    0.000    0.000    0.000 resample.py:1792(_adjust_dates_anchored)
        1    0.000    0.000    0.010    0.010 resample.py:188(_get_binner)
        1    0.000    0.000    0.000    0.000 resample.py:393(_apply_loffset)
        1    0.000    0.000    0.000    0.000 resample.py:423(_wrap_result)
        1    0.000    0.000    0.063    0.063 resample.py:80(__init__)
        1    0.000    0.000    0.105    0.105 resample.py:934(g)
      6/3    0.000    0.000    0.004    0.001 series.py:201(__init__)
        2    0.000    0.000    0.003    0.001 series.py:335(_init_dict)
        2    0.000    0.000    0.000    0.000 series.py:381(_constructor)
        5    0.000    0.000    0.000    0.000 series.py:398(_set_axis)
        1    0.000    0.000    0.000    0.000 series.py:4211(_reduce)
        1    0.000    0.000    0.000    0.000 series.py:4249(_needs_reindex_multi)
        1    0.000    0.000    0.001    0.001 series.py:4391(reindex)
       10    0.000    0.000    0.000    0.000 series.py:442(name)
        1    0.000    0.000    0.000    0.000 series.py:4793(isna)
        9    0.000    0.000    0.000    0.000 series.py:492(name)
        6    0.000    0.000    0.000    0.000 series.py:540(_values)
        1    0.000    0.000    0.000    0.000 six.py:184(find_module)
        2    0.000    0.000    0.000    0.000 typing.py:768(__instancecheck__)
        2    0.000    0.000    0.000    0.000 typing.py:771(__subclasscheck__)
        2    0.000    0.000    0.000    0.000 typing.py:868(__new__)
       39    0.000    0.000    0.000    0.000 {built-in method __new__ of type object at 0x00007FFE23F2B810}
       42    0.000    0.000    0.000    0.000 {built-in method _abc._abc_instancecheck}
        2    0.000    0.000    0.000    0.000 {built-in method _abc._abc_subclasscheck}
        1    0.000    0.000    0.000    0.000 {built-in method _csv.writer}
        6    0.000    0.000    0.000    0.000 {built-in method _imp.acquire_lock}
        1    0.000    0.000    0.000    0.000 {built-in method _imp.is_builtin}
        1    0.000    0.000    0.000    0.000 {built-in method _imp.is_frozen}
        6    0.000    0.000    0.000    0.000 {built-in method _imp.release_lock}
        2    0.000    0.000    0.000    0.000 {built-in method _thread.allocate_lock}
        2    0.000    0.000    0.000    0.000 {built-in method _thread.get_ident}
        4    0.000    0.000    0.000    0.000 {built-in method builtins.abs}
       12    0.000    0.000    0.000    0.000 {built-in method builtins.all}
        3    0.000    0.000    0.000    0.000 {built-in method builtins.any}
        5    0.000    0.000    0.000    0.000 {built-in method builtins.callable}
        1    0.000    0.000    2.217    2.217 {built-in method builtins.exec}
1569/1533    0.001    0.000    0.064    0.000 {built-in method builtins.getattr}
      144    0.000    0.000    0.000    0.000 {built-in method builtins.hasattr}
       51    0.000    0.000    0.000    0.000 {built-in method builtins.hash}
2562/2560    0.002    0.000    0.003    0.000 {built-in method builtins.isinstance}
      715    0.000    0.000    0.000    0.000 {built-in method builtins.issubclass}
  270/216    0.000    0.000    0.001    0.000 {built-in method builtins.len}
        1    0.000    0.000    0.000    0.000 {built-in method builtins.min}
        1    0.000    0.000    0.000    0.000 {built-in method builtins.ord}
        4    0.000    0.000    0.000    0.000 {built-in method builtins.sorted}
        3    0.000    0.000    0.000    0.000 {built-in method builtins.sum}
        1    0.000    0.000    0.000    0.000 {built-in method from_iterable}
        1    0.001    0.001    0.001    0.001 {built-in method io.open}
        7    0.000    0.000    0.000    0.000 {built-in method nt.fspath}
        1    0.000    0.000    0.000    0.000 {built-in method nt.getcwd}
       11    0.001    0.000    0.001    0.000 {built-in method nt.stat}
        4    0.000    0.000    0.000    0.000 {built-in method numpy.arange}
    78/77    0.000    0.000    0.000    0.000 {built-in method numpy.array}
    32/22    0.025    0.001    0.029    0.001 {built-in method numpy.core._multiarray_umath.implement_array_function}
        1    0.000    0.000    0.000    0.000 {built-in method numpy.core._multiarray_umath.normalize_axis_index}
       19    0.018    0.001    0.018    0.001 {built-in method numpy.empty}
       16    0.000    0.000    0.000    0.000 {built-in method numpy.geterrobj}
        8    0.000    0.000    0.000    0.000 {built-in method numpy.seterrobj}
        4    0.000    0.000    0.000    0.000 {built-in method numpy.zeros}
        3    0.000    0.000    0.000    0.000 {built-in method pandas._libs.lib.is_datetime_array}
        7    0.000    0.000    0.000    0.000 {built-in method pandas._libs.missing.checknull}
        2    0.000    0.000    0.000    0.000 {built-in method pandas._libs.missing.isnaobj}
        1    0.644    0.644    0.644    0.644 {built-in method pandas._libs.tslib.array_to_datetime}
       10    0.000    0.000    0.001    0.000 {built-in method pandas._libs.tslibs.offsets.to_offset}
       10    0.000    0.000    0.000    0.000 {built-in method pandas._libs.tslibs.timezones.maybe_get_tz}
        1    0.000    0.000    0.000    0.000 {built-in method sys.getfilesystemencoding}
        4    0.000    0.000    0.000    0.000 {method 'all' of 'numpy.generic' objects}
        1    0.000    0.000    0.000    0.000 {method 'all' of 'numpy.ndarray' objects}
       12    0.000    0.000    0.001    0.000 {method 'any' of 'numpy.ndarray' objects}
       33    0.000    0.000    0.000    0.000 {method 'append' of 'list' objects}
        2    0.005    0.003    0.005    0.003 {method 'argsort' of 'numpy.ndarray' objects}
        6    0.037    0.006    0.037    0.006 {method 'astype' of 'numpy.ndarray' objects}
        2    0.000    0.000    0.000    0.000 {method 'close' of '_io.TextIOWrapper' objects}
        1    0.002    0.002    0.002    0.002 {method 'close' of 'pandas._libs.parsers.TextReader' objects}
        2    0.000    0.000    0.000    0.000 {method 'copy' of 'dict' objects}
        4    0.000    0.000    0.000    0.000 {method 'copy' of 'numpy.ndarray' objects}
        1    0.000    0.000    0.000    0.000 {method 'disable' of '_lsprof.Profiler' objects}
        1    0.000    0.000    0.000    0.000 {method 'encode' of 'str' objects}
        8    0.000    0.000    0.000    0.000 {method 'endswith' of 'str' objects}
        4    0.000    0.000    0.000    0.000 {method 'extend' of 'list' objects}
        2    0.000    0.000    0.000    0.000 {method 'fill' of 'numpy.ndarray' objects}
       16    0.000    0.000    0.000    0.000 {method 'format' of 'str' objects}
       80    0.000    0.000    0.000    0.000 {method 'get' of 'dict' objects}
        1    0.000    0.000    0.000    0.000 {method 'get_indexer' of 'pandas._libs.index.IndexEngine' objects}
        3    0.000    0.000    0.000    0.000 {method 'index' of 'list' objects}
       11    0.000    0.000    0.000    0.000 {method 'items' of 'dict' objects}
       56    0.000    0.000    0.000    0.000 {method 'join' of 'str' objects}
        1    0.000    0.000    0.000    0.000 {method 'keys' of 'dict' objects}
       11    0.000    0.000    0.000    0.000 {method 'lower' of 'str' objects}
        2    0.000    0.000    0.000    0.000 {method 'match' of 're.Pattern' objects}
        1    0.000    0.000    0.000    0.000 {method 'normalize' of 'pandas._libs.tslibs.timestamps._Timestamp' objects}
       20    0.000    0.000    0.000    0.000 {method 'pop' of 'dict' objects}
        2    0.000    0.000    0.000    0.000 {method 'pop' of 'list' objects}
        7    0.000    0.000    0.000    0.000 {method 'ravel' of 'numpy.ndarray' objects}
        1    1.092    1.092    1.120    1.120 {method 'read' of 'pandas._libs.parsers.TextReader' objects}
       21    0.001    0.000    0.001    0.000 {method 'reduce' of 'numpy.ufunc' objects}
        1    0.000    0.000    0.000    0.000 {method 'remove' of 'list' objects}
        1    0.003    0.003    0.003    0.003 {method 'repeat' of 'numpy.ndarray' objects}
        3    0.000    0.000    0.000    0.000 {method 'reshape' of 'numpy.ndarray' objects}
       12    0.000    0.000    0.000    0.000 {method 'rpartition' of 'str' objects}
      110    0.000    0.000    0.000    0.000 {method 'rstrip' of 'str' objects}
        2    0.000    0.000    0.000    0.000 {method 'search' of 're.Pattern' objects}
        1    0.000    0.000    0.000    0.000 {method 'set_noconvert' of 'pandas._libs.parsers.TextReader' objects}
        2    0.000    0.000    0.000    0.000 {method 'sort' of 'numpy.ndarray' objects}
        2    0.000    0.000    0.000    0.000 {method 'split' of 're.Pattern' objects}
       19    0.000    0.000    0.000    0.000 {method 'startswith' of 'str' objects}
        1    0.000    0.000    0.000    0.000 {method 'sum' of 'numpy.ndarray' objects}
        2    0.000    0.000    0.000    0.000 {method 'swapaxes' of 'numpy.ndarray' objects}
        6    0.021    0.003    0.021    0.003 {method 'take' of 'numpy.ndarray' objects}
        1    0.000    0.000    0.000    0.000 {method 'time' of 'datetime.datetime' objects}
        2    0.000    0.000    0.000    0.000 {method 'update' of 'dict' objects}
       14    0.000    0.000    0.000    0.000 {method 'upper' of 'str' objects}
       62    0.000    0.000    0.000    0.000 {method 'view' of 'numpy.ndarray' objects}
        1    0.000    0.000    0.000    0.000 {method 'writerow' of '_csv.writer' objects}
        2    0.007    0.004    0.007    0.004 {pandas._libs.algos.ensure_float64}
       13    0.000    0.000    0.000    0.000 {pandas._libs.algos.ensure_int64}
        9    0.000    0.000    0.000    0.000 {pandas._libs.algos.ensure_object}
       14    0.000    0.000    0.000    0.000 {pandas._libs.algos.ensure_platform_int}
        1    0.000    0.000    0.000    0.000 {pandas._libs.algos.take_1d_object_object}
        2    0.010    0.005    0.010    0.005 {pandas._libs.algos.take_2d_axis0_float64_float64}
        2    0.021    0.010    0.021    0.010 {pandas._libs.algos.take_2d_axis1_int64_int64}
        2    0.021    0.011    0.021    0.011 {pandas._libs.algos.take_2d_axis1_object_object}
        1    0.000    0.000    0.000    0.000 {pandas._libs.lib.array_equivalent_object}
        3    0.000    0.000    0.000    0.000 {pandas._libs.lib.clean_index_list}
        1    0.001    0.001    0.001    0.001 {pandas._libs.lib.generate_bins_dt64}
        1    0.000    0.000    0.000    0.000 {pandas._libs.lib.get_reverse_indexer}
        2    0.000    0.000    0.000    0.000 {pandas._libs.lib.infer_datetimelike_array}
        8    0.020    0.003    0.020    0.003 {pandas._libs.lib.infer_dtype}
        5    0.000    0.000    0.000    0.000 {pandas._libs.lib.is_bool}
       14    0.000    0.000    0.000    0.000 {pandas._libs.lib.is_float}
        8    0.000    0.000    0.000    0.000 {pandas._libs.lib.is_integer}
        8    0.000    0.000    0.000    0.000 {pandas._libs.lib.is_iterator}
       35    0.000    0.000    0.000    0.000 {pandas._libs.lib.is_list_like}
       46    0.000    0.000    0.000    0.000 {pandas._libs.lib.is_scalar}
        4    0.004    0.001    0.004    0.001 {pandas._libs.lib.maybe_indices_to_slice}
        1    0.021    0.021    0.021    0.021 {pandas._libs.tslib.format_array_from_datetime}
        1    0.017    0.017    0.017    0.017 {pandas._libs.tslibs.parsing.concat_date_cols}
        1    0.000    0.000    0.000    0.000 {pandas._libs.tslibs.timezones.infer_tzinfo}
        1    0.046    0.046    0.046    0.046 {pandas._libs.writers.write_csv_rows}


         15890 function calls (15773 primitive calls) in 2.701 seconds

   Ordered by: standard name

   ncalls  tottime  percall  cumtime  percall filename:lineno(function)
        4    0.000    0.000    0.000    0.000 <__array_function__ internals>:2(all)
       15    0.000    0.000    0.039    0.003 <__array_function__ internals>:2(concatenate)
        2    0.000    0.000    0.000    0.000 <__array_function__ internals>:2(copyto)
        1    0.000    0.000    0.000    0.000 <__array_function__ internals>:2(diff)
        2    0.000    0.000    0.000    0.000 <__array_function__ internals>:2(empty_like)
        2    0.000    0.000    0.000    0.000 <__array_function__ internals>:2(isclose)
        2    0.000    0.000    0.000    0.000 <__array_function__ internals>:2(min_scalar_type)
        2    0.000    0.000    0.000    0.000 <__array_function__ internals>:2(ndim)
        1    0.000    0.000    0.005    0.005 <__array_function__ internals>:2(repeat)
        2    0.000    0.000    0.000    0.000 <__array_function__ internals>:2(result_type)
        2    0.000    0.000    0.000    0.000 <__array_function__ internals>:2(sort)
        2    0.000    0.000    0.000    0.000 <__array_function__ internals>:2(zeros_like)
       28    0.000    0.000    0.000    0.000 <frozen importlib._bootstrap>:1017(_handle_fromlist)
        1    0.000    0.000    0.000    0.000 <frozen importlib._bootstrap>:103(release)
        1    0.000    0.000    0.000    0.000 <frozen importlib._bootstrap>:143(__init__)
        1    0.000    0.000    0.000    0.000 <frozen importlib._bootstrap>:147(__enter__)
        1    0.000    0.000    0.000    0.000 <frozen importlib._bootstrap>:151(__exit__)
        1    0.000    0.000    0.000    0.000 <frozen importlib._bootstrap>:157(_get_module_lock)
        1    0.000    0.000    0.000    0.000 <frozen importlib._bootstrap>:176(cb)
       55    0.000    0.000    0.000    0.000 <frozen importlib._bootstrap>:222(_verbose_message)
        1    0.000    0.000    0.000    0.000 <frozen importlib._bootstrap>:342(__init__)
        1    0.000    0.000    0.000    0.000 <frozen importlib._bootstrap>:58(__init__)
        1    0.000    0.000    0.000    0.000 <frozen importlib._bootstrap>:725(find_spec)
        1    0.000    0.000    0.000    0.000 <frozen importlib._bootstrap>:78(acquire)
        1    0.000    0.000    0.000    0.000 <frozen importlib._bootstrap>:800(find_spec)
        4    0.000    0.000    0.000    0.000 <frozen importlib._bootstrap>:863(__enter__)
        4    0.000    0.000    0.000    0.000 <frozen importlib._bootstrap>:867(__exit__)
        1    0.000    0.000    0.000    0.000 <frozen importlib._bootstrap>:881(_find_spec_legacy)
        1    0.000    0.000    0.002    0.002 <frozen importlib._bootstrap>:890(_find_spec)
        1    0.000    0.000    0.002    0.002 <frozen importlib._bootstrap>:956(_find_and_load_unlocked)
        1    0.000    0.000    0.002    0.002 <frozen importlib._bootstrap>:986(_find_and_load)
       12    0.000    0.000    0.000    0.000 <frozen importlib._bootstrap_external>:1265(_path_importer_cache)
        1    0.000    0.000    0.002    0.002 <frozen importlib._bootstrap_external>:1302(_get_spec)
        1    0.000    0.000    0.002    0.002 <frozen importlib._bootstrap_external>:1334(find_spec)
       11    0.000    0.000    0.002    0.000 <frozen importlib._bootstrap_external>:1431(find_spec)
       11    0.000    0.000    0.000    0.000 <frozen importlib._bootstrap_external>:36(_relax_case)
       55    0.000    0.000    0.000    0.000 <frozen importlib._bootstrap_external>:62(_path_join)
       55    0.000    0.000    0.000    0.000 <frozen importlib._bootstrap_external>:64(<listcomp>)
       11    0.000    0.000    0.001    0.000 <frozen importlib._bootstrap_external>:80(_path_stat)
        1    0.029    0.029    2.701    2.701 <ipython-input-8-9643e9d6306d>:23(detail_DS)
        1    0.000    0.000    2.701    2.701 <string>:1(<module>)
        2    0.000    0.000    0.000    0.000 <string>:1(__new__)
       44    0.000    0.000    0.000    0.000 _asarray.py:14(asarray)
        7    0.000    0.000    0.000    0.000 _asarray.py:221(require)
        7    0.000    0.000    0.000    0.000 _asarray.py:298(<setcomp>)
       10    0.000    0.000    0.000    0.000 _asarray.py:86(asanyarray)
       39    0.000    0.000    0.000    0.000 _dtype.py:24(_kind_name)
       39    0.000    0.000    0.000    0.000 _dtype.py:307(_name_includes_bit_suffix)
       39    0.000    0.000    0.001    0.000 _dtype.py:321(_name_get)
        1    0.000    0.000    0.000    0.000 _methods.py:45(_sum)
       15    0.000    0.000    0.001    0.000 _methods.py:53(_any)
        5    0.000    0.000    0.000    0.000 _methods.py:56(_all)
        4    0.000    0.000    0.022    0.006 _mixins.py:33(take)
       44    0.000    0.000    0.001    0.000 _mixins.py:70(shape)
       38    0.000    0.000    0.001    0.000 _mixins.py:74(__len__)
        5    0.000    0.000    0.000    0.000 _mixins.py:77(ndim)
        1    0.000    0.000    0.000    0.000 _mixins.py:93(ravel)
        1    0.000    0.000    0.000    0.000 _ranges.py:13(generate_regular_range)
        8    0.000    0.000    0.000    0.000 _ufunc_config.py:132(geterr)
        8    0.000    0.000    0.000    0.000 _ufunc_config.py:32(seterr)
        4    0.000    0.000    0.000    0.000 _ufunc_config.py:429(__init__)
        4    0.000    0.000    0.000    0.000 _ufunc_config.py:433(__enter__)
        4    0.000    0.000    0.000    0.000 _ufunc_config.py:438(__exit__)
        5    0.000    0.000    0.000    0.000 _validators.py:208(validate_bool_kwarg)
        2    0.000    0.000    0.000    0.000 abc.py:100(__subclasscheck__)
       44    0.000    0.000    0.000    0.000 abc.py:96(__instancecheck__)
        1    0.000    0.000    0.000    0.000 aggregation.py:235(maybe_mangle_lambdas)
        1    0.000    0.000    0.000    0.000 aggregation.py:30(reconstruct_func)
        7    0.000    0.000    0.000    0.000 algorithms.py:1487(_get_take_nd_function)
        4    0.000    0.000    0.022    0.005 algorithms.py:1523(take)
        7    0.001    0.000    0.097    0.014 algorithms.py:1616(take_nd)
        1    0.000    0.000    0.000    0.000 base.py:1032(__iter__)
       14    0.000    0.000    0.000    0.000 base.py:1175(name)
       13    0.000    0.000    0.000    0.000 base.py:1182(name)
        1    0.000    0.000    0.000    0.000 base.py:1378(nlevels)
        4    0.000    0.000    0.007    0.002 base.py:1571(is_monotonic)
        5    0.010    0.002    0.010    0.002 base.py:1578(is_monotonic_increasing)
        2    0.052    0.026    0.052    0.026 base.py:1646(is_unique)
        1    0.000    0.000    0.000    0.000 base.py:1685(is_boolean)
        1    0.000    0.000    0.000    0.000 base.py:1841(is_object)
        2    0.000    0.000    0.000    0.000 base.py:2000(inferred_type)
        3    0.000    0.000    0.000    0.000 base.py:2007(is_all_dates)
        1    0.000    0.000    0.000    0.000 base.py:201(_obj_with_exclusions)
       20    0.000    0.000    0.000    0.000 base.py:201(construct_from_string)
        1    0.000    0.000    0.058    0.058 base.py:251(_try_aggregate_string_function)
      368    0.001    0.000    0.003    0.000 base.py:256(is_dtype)
        1    0.000    0.000    0.058    0.058 base.py:281(_aggregate)
     12/6    0.000    0.000    0.002    0.000 base.py:293(__new__)
        1    0.000    0.000    0.000    0.000 base.py:2957(get_indexer)
        1    0.000    0.000    0.000    0.000 base.py:3115(_validate_positional_slice)
        1    0.000    0.000    0.000    0.000 base.py:3275(_can_reindex)
        1    0.000    0.000    0.000    0.000 base.py:3291(reindex)
       21    0.000    0.000    0.000    0.000 base.py:3870(_values)
        2    0.000    0.000    0.000    0.000 base.py:3896(_get_engine_target)
       11    0.000    0.000    0.000    0.000 base.py:4083(__getitem__)
      343    0.001    0.000    0.001    0.000 base.py:413(find)
        3    0.000    0.000    0.000    0.000 base.py:4196(equals)
        2    0.000    0.000    0.000    0.000 base.py:424(<genexpr>)
        1    0.000    0.000    0.000    0.000 base.py:4275(identical)
        2    0.000    0.000    0.007    0.004 base.py:4529(argsort)
        6    0.000    0.000    0.000    0.000 base.py:463(_simple_new)
        1    0.000    0.000    0.000    0.000 base.py:4717(_maybe_promote)
        2    0.000    0.000    0.000    0.000 base.py:498(_shallow_copy)
        3    0.000    0.000    0.000    0.000 base.py:4985(_validate_indexer)
        3    0.000    0.000    0.000    0.000 base.py:520(is_)
       19    0.000    0.000    0.000    0.000 base.py:544(_reset_identity)
        1    0.000    0.000    0.000    0.000 base.py:5517(ensure_index_from_sequences)
        4    0.000    0.000    0.000    0.000 base.py:554(_engine)
       26    0.000    0.000    0.002    0.000 base.py:5557(ensure_index)
        5    0.000    0.000    0.000    0.000 base.py:561(<lambda>)
        1    0.000    0.000    0.000    0.000 base.py:5621(ensure_has_len)
        1    0.000    0.000    0.000    0.000 base.py:563(_get_cython_func)
       38    0.000    0.000    0.000    0.000 base.py:5654(maybe_extract_name)
       59    0.000    0.000    0.001    0.000 base.py:567(__len__)
        4    0.000    0.000    0.000    0.000 base.py:5670(_maybe_cast_with_dtype)
        4    0.000    0.000    0.000    0.000 base.py:5724(_maybe_cast_data_without_dtype)
        1    0.000    0.000    0.000    0.000 base.py:573(__array__)
        2    0.000    0.000    0.000    0.000 base.py:5838(_maybe_asobject)
        4    0.000    0.000    0.000    0.000 base.py:590(dtype)
        1    0.000    0.000    0.000    0.000 base.py:669(size)
        6    0.000    0.000    0.023    0.004 base.py:701(take)
        6    0.000    0.000    0.022    0.004 base.py:723(_assert_take_fillable)
        1    0.000    0.000    0.000    0.000 base.py:743(to_numpy)
        1    0.000    0.000    0.000    0.000 base.py:854(empty)
        2    0.000    0.000    0.024    0.012 base.py:954(to_native_types)
        1    0.000    0.000    0.000    0.000 base.py:984(_format_native_types)
        2    0.000    0.000    0.000    0.000 blocks.py:111(_simple_new)
        7    0.000    0.000    0.097    0.014 blocks.py:1238(take_nd)
       19    0.000    0.000    0.001    0.000 blocks.py:124(__init__)
       19    0.000    0.000    0.000    0.000 blocks.py:135(_check_ndim)
        2    0.000    0.000    0.091    0.045 blocks.py:1938(to_native_types)
        6    0.000    0.000    0.000    0.000 blocks.py:201(internal_values)
        6    0.000    0.000    0.000    0.000 blocks.py:229(fill_value)
       48    0.000    0.000    0.000    0.000 blocks.py:233(mgr_locs)
       23    0.000    0.000    0.000    0.000 blocks.py:237(mgr_locs)
        6    0.000    0.000    0.000    0.000 blocks.py:2374(__init__)
        2    0.000    0.000    0.000    0.000 blocks.py:244(make_block)
       11    0.000    0.000    0.000    0.000 blocks.py:256(make_block_same_class)
       19    0.000    0.000    0.001    0.000 blocks.py:2655(get_block_type)
        8    0.000    0.000    0.001    0.000 blocks.py:2701(make_block)
        2    0.000    0.000    0.000    0.000 blocks.py:2728(_extend_blocks)
        2    0.000    0.000    0.000    0.000 blocks.py:287(_slice)
        2    0.000    0.000    0.000    0.000 blocks.py:292(getitem_block)
        5    0.000    0.000    0.000    0.000 blocks.py:311(shape)
       13    0.000    0.000    0.000    0.000 blocks.py:315(dtype)
        2    0.000    0.000    0.000    0.000 blocks.py:619(convert)
        4    0.000    0.000    0.000    0.000 blocks.py:675(copy)
       12    0.000    0.000    0.000    0.000 cast.py:1185(maybe_castable)
        7    0.000    0.000    0.000    0.000 cast.py:1199(maybe_infer_to_datetimelike)
       10    0.000    0.000    0.000    0.000 cast.py:1308(maybe_cast_to_datetime)
        5    0.000    0.000    0.000    0.000 cast.py:1568(construct_1d_object_array_from_listlike)
        7    0.000    0.000    0.000    0.000 cast.py:1593(construct_1d_ndarray_preserving_na)
        2    0.000    0.000    0.001    0.000 cast.py:184(maybe_downcast_numeric)
        2    0.000    0.000    0.000    0.000 cast.py:300(maybe_cast_result_dtype)
        8    0.000    0.000    0.000    0.000 cast.py:442(maybe_promote)
        8    0.000    0.000    0.000    0.000 cast.py:598(_ensure_dtype_type)
        1    0.000    0.000    0.000    0.000 codecs.py:186(__init__)
        9    0.000    0.000    0.000    0.000 common.py:1025(is_datetime_or_timedelta_dtype)
        1    0.000    0.000    0.000    0.000 common.py:111(ensure_int_or_float)
        8    0.000    0.000    0.000    0.000 common.py:1180(needs_i8_conversion)
        2    0.000    0.000    0.000    0.000 common.py:1223(is_numeric_dtype)
        2    0.000    0.000    0.000    0.000 common.py:1265(is_string_like_dtype)
        2    0.000    0.000    0.000    0.000 common.py:1293(<lambda>)
       92    0.000    0.000    0.001    0.000 common.py:1296(is_float_dtype)
       52    0.000    0.000    0.001    0.000 common.py:1330(is_bool_dtype)
        2    0.000    0.000    0.000    0.000 common.py:140(is_fsspec_url)
      339    0.001    0.000    0.002    0.000 common.py:1460(is_extension_array_dtype)
       11    0.000    0.000    0.000    0.000 common.py:149(cast_scalar_indexer)
        1    0.000    0.000    0.000    0.000 common.py:1509(is_complex_dtype)
        2    0.000    0.000    0.000    0.000 common.py:152(get_filepath_or_buffer)
       18    0.000    0.000    0.000    0.000 common.py:1541(_is_dtype)
      110    0.000    0.000    0.000    0.000 common.py:1565(_get_dtype)
      370    0.001    0.000    0.001    0.000 common.py:1600(_is_dtype_type)
       41    0.000    0.000    0.000    0.000 common.py:1733(pandas_dtype)
      183    0.000    0.000    0.000    0.000 common.py:178(classes)
      183    0.000    0.000    0.000    0.000 common.py:180(<lambda>)
      187    0.000    0.000    0.000    0.000 common.py:183(classes_and_not_datetimelike)
      187    0.000    0.000    0.000    0.000 common.py:188(<lambda>)
       68    0.000    0.000    0.000    0.000 common.py:194(is_object_dtype)
        1    0.000    0.000    0.000    0.000 common.py:211(count_not_none)
        5    0.000    0.000    0.000    0.000 common.py:215(<genexpr>)
       10    0.000    0.000    0.000    0.000 common.py:218(asarray_tuplesafe)
       21    0.000    0.000    0.000    0.000 common.py:224(is_sparse)
        2    0.000    0.000    0.000    0.000 common.py:269(get_compression_method)
        2    0.000    0.000    0.000    0.000 common.py:274(maybe_iterable_to_list)
        3    0.000    0.000    0.000    0.000 common.py:302(infer_compression)
        1    0.000    0.000    0.000    0.000 common.py:329(apply_if_callable)
       17    0.000    0.000    0.000    0.000 common.py:348(is_datetime64_dtype)
        1    0.000    0.000    0.003    0.003 common.py:356(get_handle)
       52    0.000    0.000    0.001    0.000 common.py:381(is_datetime64tz_dtype)
       35    0.000    0.000    0.000    0.000 common.py:422(is_timedelta64_dtype)
       66    0.000    0.000    0.001    0.000 common.py:456(is_period_dtype)
        2    0.000    0.000    0.000    0.000 common.py:49(is_url)
       46    0.000    0.000    0.000    0.000 common.py:492(is_interval_dtype)
      230    0.001    0.000    0.003    0.000 common.py:530(is_categorical_dtype)
       16    0.000    0.000    0.000    0.000 common.py:566(is_string_dtype)
       16    0.000    0.000    0.000    0.000 common.py:595(condition)
        3    0.000    0.000    0.000    0.000 common.py:598(is_excluded_dtype)
       12    0.000    0.000    0.000    0.000 common.py:603(<genexpr>)
       19    0.000    0.000    0.000    0.000 common.py:608(is_dtype_equal)
        7    0.000    0.000    0.000    0.000 common.py:67(_expand_user)
      169    0.001    0.000    0.001    0.000 common.py:696(is_integer_dtype)
        8    0.000    0.000    0.000    0.000 common.py:750(is_signed_integer_dtype)
        8    0.000    0.000    0.000    0.000 common.py:806(is_unsigned_integer_dtype)
        1    0.000    0.000    0.000    0.000 common.py:88(validate_header_arg)
       24    0.000    0.000    0.000    0.000 common.py:905(is_datetime64_any_dtype)
        2    0.000    0.000    0.000    0.000 common.py:947(is_datetime64_ns_dtype)
        3    0.000    0.000    0.000    0.000 common.py:97(is_bool_indexer)
        5    0.000    0.000    0.000    0.000 common.py:97(stringify_path)
        1    0.000    0.000    0.061    0.061 construction.py:237(init_dict)
        1    0.000    0.000    0.024    0.024 construction.py:329(_homogenize)
       22    0.000    0.000    0.000    0.000 construction.py:339(extract_array)
       14    0.000    0.000    0.024    0.002 construction.py:390(sanitize_array)
       14    0.000    0.000    0.001    0.000 construction.py:520(_try_cast)
        7    0.000    0.000    0.000    0.000 construction.py:580(is_empty_data)
        1    0.000    0.000    0.059    0.059 construction.py:60(arrays_to_mgr)
        2    0.000    0.000    0.002    0.001 construction.py:600(create_series_with_explicit_dtype)
        1    0.000    0.000    0.218    0.218 csvs.py:158(save)
        1    0.000    0.000    0.000    0.000 csvs.py:233(_save_header)
        1    0.000    0.000    0.214    0.214 csvs.py:313(_save)
        1    0.000    0.000    0.214    0.214 csvs.py:330(_save_chunk)
        1    0.000    0.000    0.001    0.001 csvs.py:34(__init__)
        1    0.000    0.000    0.001    0.001 datetimelike.py:1000(_hasnans)
       20    0.000    0.000    0.000    0.000 datetimelike.py:1082(freq)
        1    0.003    0.003    0.058    0.058 datetimelike.py:1106(inferred_freq)
        1    0.000    0.000    0.000    0.000 datetimelike.py:1670(validate_periods)
        1    0.000    0.000    0.000    0.000 datetimelike.py:1696(validate_endpoints)
        8    0.000    0.000    0.000    0.000 datetimelike.py:1729(validate_inferred_freq)
        8    0.000    0.000    0.000    0.000 datetimelike.py:1764(maybe_infer_freq)
        4    0.000    0.000    0.027    0.007 datetimelike.py:181(take)
        1    0.000    0.000    0.006    0.006 datetimelike.py:224(min)
        1    0.000    0.000    0.000    0.000 datetimelike.py:281(max)
       49    0.000    0.000    0.000    0.000 datetimelike.py:464(_ndarray)
        5    0.000    0.000    0.000    0.000 datetimelike.py:469(_from_backing_data)
       60    0.000    0.000    0.000    0.000 datetimelike.py:491(asi8)
        2    0.000    0.000    0.000    0.000 datetimelike.py:524(__array__)
        4    0.000    0.000    0.000    0.000 datetimelike.py:530(__getitem__)
        3    0.000    0.000    0.000    0.000 datetimelike.py:564(_get_getitem_freq)
        1    0.000    0.000    0.000    0.000 datetimelike.py:622(astype)
        4    0.000    0.000    0.000    0.000 datetimelike.py:640(_shallow_copy)
        3    0.000    0.000    0.000    0.000 datetimelike.py:711(_values_for_argsort)
        1    0.001    0.001    0.001    0.001 datetimelike.py:993(_isnan)
        1    0.000    0.000    0.001    0.001 datetimes.py:135(_maybe_cache)
        1    0.000    0.000    0.000    0.000 datetimes.py:175(_box_as_indexlike)
        8    0.000    0.000    0.001    0.000 datetimes.py:1871(sequence_to_dt64ns)
        1    0.000    0.000    0.686    0.686 datetimes.py:2002(objects_to_datetime64ns)
        9    0.000    0.000    0.001    0.000 datetimes.py:2085(maybe_convert_dtype)
        5    0.000    0.000    0.000    0.000 datetimes.py:214(__init__)
       13    0.000    0.000    0.000    0.000 datetimes.py:2178(_validate_dt64_dtype)
       16    0.000    0.000    0.000    0.000 datetimes.py:2220(validate_tz_from_dtype)
        1    0.000    0.000    0.000    0.000 datetimes.py:2267(_infer_tz_from_endpoints)
        1    0.000    0.000    0.000    0.000 datetimes.py:2310(_maybe_normalize_endpoints)
        8    0.000    0.000    0.002    0.000 datetimes.py:246(__new__)
        1    0.000    0.000    0.686    0.686 datetimes.py:259(_convert_listlike_datetimes)
       13    0.000    0.000    0.000    0.000 datetimes.py:285(_simple_new)
       13    0.000    0.000    0.000    0.000 datetimes.py:286(_simple_new)
        8    0.000    0.000    0.001    0.000 datetimes.py:299(_from_sequence)
        1    0.000    0.000    0.000    0.000 datetimes.py:344(_generate_range)
        3    0.000    0.000    0.000    0.000 datetimes.py:474(_box_func)
        3    0.000    0.000    0.000    0.000 datetimes.py:476(<lambda>)
       77    0.000    0.000    0.000    0.000 datetimes.py:478(dtype)
        9    0.000    0.000    0.000    0.000 datetimes.py:500(tz)
        2    0.000    0.000    0.000    0.000 datetimes.py:542(__array__)
        1    0.000    0.000    0.000    0.000 datetimes.py:572(astype)
       10    0.000    0.000    0.000    0.000 datetimes.py:58(tz_to_dtype)
        1    0.000    0.000    0.023    0.023 datetimes.py:604(_format_native_types)
        1    0.000    0.000    0.688    0.688 datetimes.py:605(to_datetime)
        1    0.000    0.000    0.000    0.000 datetimes.py:79(should_cache)
        1    0.000    0.000    0.000    0.000 datetimes.py:849(date_range)
        2    0.000    0.000    0.000    0.000 dtype.py:187(construct_from_string)
        2    0.000    0.000    0.000    0.000 dtypes.py:1062(construct_from_string)
       37    0.000    0.000    0.000    0.000 dtypes.py:1116(is_dtype)
        2    0.000    0.000    0.000    0.000 dtypes.py:281(construct_from_string)
        2    0.000    0.000    0.000    0.000 dtypes.py:694(construct_from_string)
        2    0.000    0.000    0.000    0.000 dtypes.py:853(construct_from_string)
       58    0.000    0.000    0.001    0.000 dtypes.py:903(is_dtype)
        4    0.000    0.000    0.001    0.000 extension.py:214(__getitem__)
        3    0.000    0.000    0.000    0.000 extension.py:228(_get_engine_target)
        1    0.000    0.000    0.001    0.001 extension.py:269(astype)
        2    0.000    0.000    0.059    0.029 extension.py:44(cached)
       21    0.000    0.000    0.000    0.000 extension.py:53(fget)
        1    0.000    0.000    0.023    0.023 extension.py:77(method)
        1    0.000    0.000    0.001    0.001 format.py:1574(_is_dates_only)
        1    0.000    0.000    0.001    0.001 format.py:1637(_get_format_datetime64_from_values)
        6    0.000    0.000    0.000    0.000 frame.py:421(_constructor)
        7    0.000    0.000    0.062    0.009 frame.py:441(__init__)
        1    0.000    0.000    0.000    0.000 frame.py:585(shape)
        1    0.000    0.000    0.000    0.000 frame.py:6397(groupby)
        1    0.000    0.000    0.055    0.055 frequencies.py:120(infer_freq)
        1    0.000    0.000    0.003    0.003 frequencies.py:191(__init__)
        1    0.000    0.000    0.052    0.052 frequencies.py:230(get_freq)
        1    0.000    0.000    0.000    0.000 frequencies.py:492(is_superperiod)
        2    0.000    0.000    0.000    0.000 frequencies.py:550(_maybe_coerce_freq)
        1    0.000    0.000    0.000    0.000 frequencies.py:575(_is_annual)
        1    0.000    0.000    0.000    0.000 frequencies.py:580(_is_quarterly)
        1    0.000    0.000    0.000    0.000 frequencies.py:585(_is_monthly)
        1    0.000    0.000    0.000    0.000 frequencies.py:590(_is_weekly)
        4    0.000    0.000    0.000    0.000 fromnumeric.py:2333(_all_dispatcher)
        4    0.000    0.000    0.000    0.000 fromnumeric.py:2337(all)
        2    0.000    0.000    0.000    0.000 fromnumeric.py:3071(_ndim_dispatcher)
        2    0.000    0.000    0.000    0.000 fromnumeric.py:3075(ndim)
        1    0.000    0.000    0.000    0.000 fromnumeric.py:433(_repeat_dispatcher)
        1    0.000    0.000    0.005    0.005 fromnumeric.py:437(repeat)
        1    0.000    0.000    0.005    0.005 fromnumeric.py:52(_wrapfunc)
        4    0.000    0.000    0.000    0.000 fromnumeric.py:70(_wrapreduction)
        4    0.000    0.000    0.000    0.000 fromnumeric.py:71(<dictcomp>)
        2    0.000    0.000    0.000    0.000 fromnumeric.py:835(_sort_dispatcher)
        2    0.000    0.000    0.000    0.000 fromnumeric.py:839(sort)
        1    0.000    0.000    0.000    0.000 function.py:384(validate_resampler_func)
        2    0.000    0.000    0.000    0.000 function.py:400(validate_minmax_axis)
        9    0.000    0.000    0.000    0.000 function.py:48(__call__)
        1    0.000    0.000    0.000    0.000 function_base.py:1148(_diff_dispatcher)
        1    0.000    0.000    0.000    0.000 function_base.py:1152(diff)
     1403    0.001    0.000    0.002    0.000 generic.py:10(_check)
        1    0.000    0.000    0.058    0.058 generic.py:1018(_cython_agg_general)
        1    0.000    0.000    0.057    0.057 generic.py:1026(_cython_agg_blocks)
        1    0.000    0.000    0.000    0.000 generic.py:11556(logical_func)
        1    0.000    0.000    0.000    0.000 generic.py:1696(_get_data_to_aggregate)
        1    0.000    0.000    0.002    0.002 generic.py:1781(_wrap_agged_blocks)
       13    0.000    0.000    0.000    0.000 generic.py:195(__init__)
        8    0.000    0.000    0.000    0.000 generic.py:232(attrs)
        4    0.000    0.000    0.000    0.000 generic.py:249(_validate_dtype)
        1    0.000    0.000    0.218    0.218 generic.py:2994(to_csv)
        2    0.000    0.000    0.118    0.059 generic.py:3256(take)
        1    0.000    0.000    0.000    0.000 generic.py:334(_construct_axes_from_arguments)
        1    0.000    0.000    0.001    0.001 generic.py:3551(_slice)
        1    0.000    0.000    0.000    0.000 generic.py:3582(_set_is_copy)
        1    0.000    0.000    0.000    0.000 generic.py:362(<dictcomp>)
       15    0.000    0.000    0.000    0.000 generic.py:365(_get_axis_number)
        6    0.000    0.000    0.000    0.000 generic.py:377(_get_axis)
        4    0.000    0.000    0.000    0.000 generic.py:382(_get_block_manager_axis)
        1    0.000    0.000    0.001    0.001 generic.py:4214(reindex)
        2    0.000    0.000    0.000    0.000 generic.py:4447(<genexpr>)
        1    0.000    0.000    0.001    0.001 generic.py:4465(_reindex_axes)
        1    0.000    0.000    0.000    0.000 generic.py:4502(_reindex_with_indexers)
        8    0.000    0.000    0.000    0.000 generic.py:5095(__finalize__)
        6    0.000    0.000    0.000    0.000 generic.py:5123(__getattr__)
       10    0.000    0.000    0.000    0.000 generic.py:5141(__setattr__)
        4    0.000    0.000    0.000    0.000 generic.py:5197(_protect_consolidate)
        3    0.000    0.000    0.000    0.000 generic.py:5208(_consolidate_inplace)
        3    0.000    0.000    0.000    0.000 generic.py:5211(f)
        1    0.000    0.000    0.000    0.000 generic.py:5216(_consolidate)
        1    0.000    0.000    0.000    0.000 generic.py:5234(<lambda>)
        1    0.000    0.000    0.000    0.000 generic.py:5679(_convert)
        1    0.000    0.000    0.000    0.000 generic.py:7060(isna)
        1    0.000    0.000    0.152    0.152 generic.py:7692(resample)
        1    0.000    0.000    0.058    0.058 generic.py:937(aggregate)
        1    0.000    0.000    0.058    0.058 groupby.py:1343(mean)
        1    0.000    0.000    0.001    0.001 groupby.py:2670(_reindex_output)
        1    0.000    0.000    0.000    0.000 groupby.py:483(__init__)
        1    0.000    0.000    0.000    0.000 groupby.py:632(_selected_obj)
        1    0.000    0.000    0.000    0.000 groupby.py:697(__getattr__)
        1    0.000    0.000    0.000    0.000 grouper.py:227(__new__)
        1    0.000    0.000    0.000    0.000 grouper.py:270(__init__)
        3    0.000    0.000    0.000    0.000 grouper.py:286(ax)
        2    0.011    0.006    0.151    0.076 grouper.py:314(_set_grouper)
        1    0.000    0.000    0.001    0.001 grouper.py:413(__init__)
        1    0.000    0.000    0.000    0.000 grouper.py:605(get_grouper)
        1    0.000    0.000    0.000    0.000 grouper.py:829(_convert_grouper)
        1    0.000    0.000    0.000    0.000 index_tricks.py:316(__getitem__)
        2    0.004    0.002    0.004    0.002 indexers.py:210(maybe_convert_indices)
        1    0.000    0.000    0.000    0.000 indexers.py:298(deprecate_ndim_indexing)
        3    0.000    0.000    0.000    0.000 indexers.py:348(check_array_indexer)
        1    0.000    0.000    0.000    0.000 indexing.py:100(iloc)
        1    0.000    0.000    0.001    0.001 indexing.py:1474(_getitem_axis)
        1    0.000    0.000    0.001    0.001 indexing.py:1500(_get_slice_axis)
        1    0.000    0.000    0.000    0.000 indexing.py:2270(need_slice)
        1    0.000    0.000    0.001    0.001 indexing.py:864(__getitem__)
        7    0.000    0.000    0.000    0.000 inference.py:185(is_array_like)
        6    0.000    0.000    0.000    0.000 inference.py:263(is_dict_like)
       20    0.000    0.000    0.000    0.000 inference.py:289(<genexpr>)
       51    0.000    0.000    0.000    0.000 inference.py:322(is_hashable)
        1    0.000    0.000    0.000    0.000 inference.py:96(is_file_like)
        3    0.000    0.000    0.098    0.033 managers.py:1238(reindex_indexer)
        2    0.000    0.000    0.097    0.049 managers.py:1284(<listcomp>)
        1    0.000    0.000    0.000    0.000 managers.py:1300(_slice_take_blocks_ax0)
        7    0.000    0.000    0.000    0.000 managers.py:132(__init__)
        7    0.000    0.000    0.000    0.000 managers.py:138(<listcomp>)
        2    0.003    0.001    0.117    0.059 managers.py:1427(take)
        4    0.000    0.000    0.000    0.000 managers.py:1532(__init__)
        1    0.000    0.000    0.000    0.000 managers.py:1553(from_blocks)
        4    0.000    0.000    0.000    0.000 managers.py:156(from_blocks)
        3    0.000    0.000    0.000    0.000 managers.py:1564(from_array)
        6    0.000    0.000    0.000    0.000 managers.py:1575(_block)
        6    0.000    0.000    0.000    0.000 managers.py:1613(internal_values)
        1    0.000    0.000    0.000    0.000 managers.py:1621(is_consolidated)
        1    0.000    0.000    0.000    0.000 managers.py:1627(_consolidate_inplace)
        1    0.000    0.000    0.034    0.034 managers.py:1675(create_block_manager_from_arrays)
        3    0.000    0.000    0.000    0.000 managers.py:1680(<genexpr>)
        1    0.000    0.000    0.034    0.034 managers.py:1715(form_blocks)
        1    0.000    0.000    0.011    0.011 managers.py:1812(_simple_blockify)
        2    0.000    0.000    0.022    0.011 managers.py:1827(_multi_blockify)
        9    0.000    0.000    0.000    0.000 managers.py:1830(<lambda>)
        3    0.026    0.009    0.033    0.011 managers.py:1843(_stack_arrays)
       11    0.000    0.000    0.000    0.000 managers.py:1846(_asarray_compat)
        3    0.000    0.000    0.000    0.000 managers.py:1852(_shape_compat)
        1    0.000    0.000    0.000    0.000 managers.py:2015(_preprocess_slice_or_indexer)
        6    0.000    0.000    0.000    0.000 managers.py:212(shape)
       17    0.000    0.000    0.000    0.000 managers.py:214(<genexpr>)
       19    0.000    0.000    0.000    0.000 managers.py:216(ndim)
        4    0.000    0.000    0.000    0.000 managers.py:259(items)
        2    0.000    0.000    0.000    0.000 managers.py:321(_verify_integrity)
        7    0.000    0.000    0.000    0.000 managers.py:323(<genexpr>)
        1    0.000    0.000    0.000    0.000 managers.py:366(apply)
        1    0.000    0.000    0.000    0.000 managers.py:385(<dictcomp>)
        1    0.000    0.000    0.000    0.000 managers.py:597(convert)
        8    0.000    0.000    0.000    0.000 managers.py:675(is_consolidated)
        1    0.000    0.000    0.000    0.000 managers.py:683(_consolidate_check)
        1    0.000    0.000    0.000    0.000 managers.py:684(<listcomp>)
        1    0.000    0.000    0.000    0.000 managers.py:728(get_numeric_data)
        1    0.000    0.000    0.000    0.000 managers.py:735(<listcomp>)
        1    0.000    0.000    0.000    0.000 managers.py:737(_combine)
        1    0.000    0.000    0.000    0.000 managers.py:743(<listcomp>)
        1    0.000    0.000    0.000    0.000 managers.py:757(get_slice)
        1    0.000    0.000    0.000    0.000 managers.py:763(<listcomp>)
        4    0.000    0.000    0.000    0.000 managers.py:961(consolidate)
        5    0.000    0.000    0.000    0.000 managers.py:977(_consolidate_inplace)
       13    0.000    0.000    0.001    0.000 missing.py:130(_isna)
        6    0.000    0.000    0.001    0.000 missing.py:193(_isna_ndarraylike)
        2    0.000    0.000    0.000    0.000 missing.py:235(_isna_string_dtype)
        1    0.000    0.000    0.000    0.000 missing.py:255(notna)
        2    0.000    0.000    0.000    0.000 missing.py:341(_isna_compat)
        3    0.000    0.000    0.000    0.000 missing.py:358(array_equivalent)
        1    0.000    0.000    0.000    0.000 missing.py:456(_array_equivalent_object)
       13    0.000    0.000    0.001    0.000 missing.py:47(isna)
        2    0.000    0.000    0.000    0.000 missing.py:507(_maybe_fill)
        2    0.000    0.000    0.000    0.000 missing.py:665(clean_reindex_fill_method)
        2    0.000    0.000    0.000    0.000 missing.py:75(clean_fill_method)
        2    0.000    0.000    0.000    0.000 multiarray.py:1043(copyto)
       15    0.000    0.000    0.000    0.000 multiarray.py:143(concatenate)
        2    0.000    0.000    0.000    0.000 multiarray.py:583(min_scalar_type)
        2    0.000    0.000    0.000    0.000 multiarray.py:634(result_type)
        2    0.000    0.000    0.000    0.000 multiarray.py:75(empty_like)
        1    0.000    0.000    0.000    0.000 nanops.py:168(_get_fill_value)
        1    0.000    0.000    0.000    0.000 nanops.py:193(_maybe_get_mask)
        1    0.000    0.000    0.000    0.000 nanops.py:237(_get_values)
        1    0.000    0.000    0.000    0.000 nanops.py:322(_na_ok_dtype)
        1    0.000    0.000    0.000    0.000 nanops.py:396(nanany)
        7    0.000    0.000    0.000    0.000 ntpath.py:289(expanduser)
        1    0.000    0.000    0.000    0.000 numba_.py:17(maybe_use_numba)
        2    0.000    0.000    0.000    0.000 numeric.py:2193(_isclose_dispatcher)
        2    0.000    0.000    0.000    0.000 numeric.py:2197(isclose)
        2    0.000    0.000    0.000    0.000 numeric.py:2274(within_tol)
        2    0.000    0.000    0.000    0.000 numeric.py:71(_zeros_like_dispatcher)
        2    0.000    0.000    0.000    0.000 numeric.py:75(zeros_like)
       40    0.000    0.000    0.000    0.000 numerictypes.py:286(issubclass_)
       20    0.000    0.000    0.000    0.000 numerictypes.py:360(issubdtype)
        2    0.000    0.000    0.000    0.000 numerictypes.py:545(_can_coerce_all)
        1    0.000    0.000    0.000    0.000 numerictypes.py:569(find_common_type)
        1    0.000    0.000    0.000    0.000 numerictypes.py:621(<listcomp>)
        1    0.000    0.000    0.000    0.000 numerictypes.py:622(<listcomp>)
        1    0.000    0.000    0.000    0.000 ops.py:295(ngroups)
        3    0.000    0.000    0.000    0.000 ops.py:366(_get_cython_function)
        2    0.000    0.000    0.012    0.006 ops.py:402(_get_cython_func_and_vals)
        2    0.005    0.002    0.052    0.026 ops.py:436(_cython_operation)
        2    0.003    0.001    0.055    0.028 ops.py:581(aggregate)
        2    0.027    0.013    0.027    0.014 ops.py:591(_aggregate)
        1    0.000    0.000    0.000    0.000 ops.py:753(__init__)
        1    0.000    0.000    0.007    0.007 ops.py:833(group_info)
        1    0.000    0.000    0.000    0.000 ops.py:856(result_index)
        1    0.000    0.000    0.000    0.000 ops.py:863(levels)
        1    0.000    0.000    0.000    0.000 ops.py:867(names)
        1    0.000    0.000    0.001    0.001 ops.py:871(groupings)
        1    0.000    0.000    0.001    0.001 ops.py:873(<listcomp>)
        4    0.000    0.000    0.000    0.000 parse.py:110(_coerce_args)
        2    0.000    0.000    0.000    0.000 parse.py:366(urlparse)
        2    0.000    0.000    0.000    0.000 parse.py:417(urlsplit)
        4    0.000    0.000    0.000    0.000 parse.py:99(_noop)
        1    0.000    0.000    0.000    0.000 parsers.py:1005(_clean_options)
        1    0.000    0.000    0.006    0.006 parsers.py:1176(_make_engine)
        1    0.000    0.000    2.141    2.141 parsers.py:1194(read)
        1    0.000    0.000    0.000    0.000 parsers.py:1219(_create_index)
        4    0.000    0.000    0.000    0.000 parsers.py:1233(_is_index_col)
        3    0.000    0.000    0.000    0.000 parsers.py:1237(_is_potential_multi_index)
        6    0.000    0.000    0.000    0.000 parsers.py:1261(<genexpr>)
        1    0.000    0.000    0.000    0.000 parsers.py:1339(_validate_usecols_arg)
        1    0.000    0.000    0.000    0.000 parsers.py:1389(_validate_parse_dates_arg)
        1    0.000    0.000    0.000    0.000 parsers.py:1412(__init__)
        1    0.000    0.000    0.000    0.000 parsers.py:1499(_validate_parse_dates_presence)
        2    0.000    0.000    0.000    0.000 parsers.py:1526(<genexpr>)
        1    0.000    0.000    0.000    0.000 parsers.py:1535(<setcomp>)
        2    0.000    0.000    0.000    0.000 parsers.py:1551(_has_complex_date_col)
        1    0.000    0.000    0.000    0.000 parsers.py:1559(_should_parse_dates)
        1    0.000    0.000    0.000    0.000 parsers.py:1637(_maybe_dedup_names)
        2    0.000    0.000    0.000    0.000 parsers.py:1665(_maybe_make_multi_index_columns)
        1    0.000    0.000    0.710    0.710 parsers.py:1671(_make_index)
        1    0.000    0.000    0.000    0.000 parsers.py:1699(_get_simple_index)
        1    0.000    0.000    0.000    0.000 parsers.py:1700(ix)
        1    0.005    0.005    0.710    0.710 parsers.py:1748(_agg_index)
        1    0.000    0.000    0.000    0.000 parsers.py:1853(_infer_types)
        1    0.000    0.000    0.000    0.000 parsers.py:1959(_do_date_conversions)
        1    0.005    0.005    0.006    0.006 parsers.py:1981(__init__)
        1    0.000    0.000    0.001    0.001 parsers.py:2087(close)
        1    0.000    0.000    0.000    0.000 parsers.py:2097(_set_noconvert_columns)
        1    0.000    0.000    0.000    0.000 parsers.py:2118(_set)
        1    0.000    0.000    2.079    2.079 parsers.py:2153(read)
        1    0.000    0.000    0.000    0.000 parsers.py:2226(<listcomp>)
        1    0.000    0.000    0.000    0.000 parsers.py:2228(<dictcomp>)
        1    0.000    0.000    0.000    0.000 parsers.py:3335(_make_date_converter)
        1    0.000    0.000    0.705    0.705 parsers.py:3338(converter)
        1    0.000    0.000    0.000    0.000 parsers.py:3380(_process_date_conversion)
        1    0.000    0.000    0.000    0.000 parsers.py:3389(_isindex)
        1    0.000    0.000    0.000    0.000 parsers.py:3468(_clean_na_values)
        1    0.000    0.000    0.000    0.000 parsers.py:3505(_clean_index_names)
        2    0.000    0.000    0.000    0.000 parsers.py:369(_validate_integer)
        1    0.000    0.000    0.000    0.000 parsers.py:398(_validate_names)
        1    0.027    0.027    2.175    2.175 parsers.py:420(_read)
        1    0.000    0.000    2.175    2.175 parsers.py:533(read_csv)
        1    0.000    0.000    0.006    0.006 parsers.py:856(__init__)
        1    0.000    0.000    0.001    0.001 parsers.py:948(close)
        1    0.000    0.000    0.000    0.000 parsers.py:951(_get_options_with_defaults)
        1    0.000    0.000    0.000    0.000 parsers.py:989(_check_file_or_buffer)
        2    0.000    0.000    0.000    0.000 re.py:223(split)
        2    0.000    0.000    0.000    0.000 re.py:289(_compile)
        1    0.000    0.000    0.010    0.010 resample.py:1004(_get_binner_for_time)
        1    0.000    0.000    0.127    0.127 resample.py:1011(_downsample)
        2    0.000    0.000    0.000    0.000 resample.py:107(__getattr__)
        1    0.000    0.000    0.000    0.000 resample.py:1102(_wrap_result)
        1    0.000    0.000    0.152    0.152 resample.py:1264(get_resampler)
        1    0.000    0.000    0.000    0.000 resample.py:1313(__init__)
        1    0.000    0.000    0.000    0.000 resample.py:133(obj)
        2    0.000    0.000    0.000    0.000 resample.py:137(ax)
        1    0.000    0.000    0.151    0.151 resample.py:1405(_get_resampler)
        1    0.000    0.000    0.010    0.010 resample.py:1446(_get_time_bins)
        1    0.000    0.000    0.001    0.001 resample.py:1509(_adjust_bin_edges)
        1    0.000    0.000    0.000    0.000 resample.py:161(_convert_obj)
        1    0.000    0.000    0.000    0.000 resample.py:1668(_get_timestamp_range_edges)
        1    0.000    0.000    0.010    0.010 resample.py:179(_set_binner)
        1    0.000    0.000    0.000    0.000 resample.py:1792(_adjust_dates_anchored)
        1    0.000    0.000    0.010    0.010 resample.py:188(_get_binner)
        1    0.000    0.000    0.000    0.000 resample.py:393(_apply_loffset)
        1    0.000    0.000    0.000    0.000 resample.py:423(_wrap_result)
        1    0.000    0.000    0.081    0.081 resample.py:80(__init__)
        1    0.000    0.000    0.127    0.127 resample.py:934(g)
      6/3    0.000    0.000    0.004    0.001 series.py:201(__init__)
        2    0.000    0.000    0.003    0.001 series.py:335(_init_dict)
        2    0.000    0.000    0.000    0.000 series.py:381(_constructor)
        5    0.000    0.000    0.000    0.000 series.py:398(_set_axis)
        1    0.000    0.000    0.000    0.000 series.py:4211(_reduce)
        1    0.000    0.000    0.000    0.000 series.py:4249(_needs_reindex_multi)
        1    0.000    0.000    0.001    0.001 series.py:4391(reindex)
       10    0.000    0.000    0.000    0.000 series.py:442(name)
        1    0.000    0.000    0.000    0.000 series.py:4793(isna)
        9    0.000    0.000    0.000    0.000 series.py:492(name)
        6    0.000    0.000    0.000    0.000 series.py:540(_values)
        1    0.000    0.000    0.000    0.000 six.py:184(find_module)
        2    0.000    0.000    0.000    0.000 typing.py:768(__instancecheck__)
        2    0.000    0.000    0.000    0.000 typing.py:771(__subclasscheck__)
        2    0.000    0.000    0.000    0.000 typing.py:868(__new__)
       39    0.000    0.000    0.000    0.000 {built-in method __new__ of type object at 0x00007FFE23F2B810}
       44    0.000    0.000    0.000    0.000 {built-in method _abc._abc_instancecheck}
        2    0.000    0.000    0.000    0.000 {built-in method _abc._abc_subclasscheck}
        1    0.000    0.000    0.000    0.000 {built-in method _csv.writer}
        6    0.000    0.000    0.000    0.000 {built-in method _imp.acquire_lock}
        1    0.000    0.000    0.000    0.000 {built-in method _imp.is_builtin}
        1    0.000    0.000    0.000    0.000 {built-in method _imp.is_frozen}
        6    0.000    0.000    0.000    0.000 {built-in method _imp.release_lock}
        2    0.000    0.000    0.000    0.000 {built-in method _thread.allocate_lock}
        2    0.000    0.000    0.000    0.000 {built-in method _thread.get_ident}
        4    0.000    0.000    0.000    0.000 {built-in method builtins.abs}
       12    0.000    0.000    0.000    0.000 {built-in method builtins.all}
        3    0.000    0.000    0.000    0.000 {built-in method builtins.any}
        5    0.000    0.000    0.000    0.000 {built-in method builtins.callable}
        1    0.000    0.000    2.701    2.701 {built-in method builtins.exec}
2255/2219    0.001    0.000    0.060    0.000 {built-in method builtins.getattr}
      151    0.000    0.000    0.000    0.000 {built-in method builtins.hasattr}
       51    0.000    0.000    0.000    0.000 {built-in method builtins.hash}
3459/3457    0.002    0.000    0.004    0.000 {built-in method builtins.isinstance}
     1106    0.000    0.000    0.000    0.000 {built-in method builtins.issubclass}
  285/226    0.000    0.000    0.001    0.000 {built-in method builtins.len}
        1    0.000    0.000    0.000    0.000 {built-in method builtins.min}
        1    0.000    0.000    0.000    0.000 {built-in method builtins.ord}
        4    0.000    0.000    0.000    0.000 {built-in method builtins.sorted}
        3    0.000    0.000    0.000    0.000 {built-in method builtins.sum}
        1    0.000    0.000    0.000    0.000 {built-in method from_iterable}
        1    0.001    0.001    0.001    0.001 {built-in method io.open}
        7    0.000    0.000    0.000    0.000 {built-in method nt.fspath}
        1    0.000    0.000    0.000    0.000 {built-in method nt.getcwd}
       11    0.001    0.000    0.001    0.000 {built-in method nt.stat}
        4    0.000    0.000    0.000    0.000 {built-in method numpy.arange}
    86/85    0.000    0.000    0.000    0.000 {built-in method numpy.array}
    37/27    0.039    0.001    0.045    0.002 {built-in method numpy.core._multiarray_umath.implement_array_function}
        1    0.000    0.000    0.000    0.000 {built-in method numpy.core._multiarray_umath.normalize_axis_index}
       19    0.019    0.001    0.019    0.001 {built-in method numpy.empty}
       16    0.000    0.000    0.000    0.000 {built-in method numpy.geterrobj}
        8    0.000    0.000    0.000    0.000 {built-in method numpy.seterrobj}
        4    0.000    0.000    0.000    0.000 {built-in method numpy.zeros}
        3    0.000    0.000    0.000    0.000 {built-in method pandas._libs.lib.is_datetime_array}
        7    0.000    0.000    0.000    0.000 {built-in method pandas._libs.missing.checknull}
        2    0.000    0.000    0.000    0.000 {built-in method pandas._libs.missing.isnaobj}
        1    0.686    0.686    0.686    0.686 {built-in method pandas._libs.tslib.array_to_datetime}
       10    0.000    0.000    0.000    0.000 {built-in method pandas._libs.tslibs.offsets.to_offset}
       10    0.000    0.000    0.000    0.000 {built-in method pandas._libs.tslibs.timezones.maybe_get_tz}
        1    0.000    0.000    0.000    0.000 {built-in method sys.getfilesystemencoding}
        4    0.000    0.000    0.000    0.000 {method 'all' of 'numpy.generic' objects}
        1    0.000    0.000    0.000    0.000 {method 'all' of 'numpy.ndarray' objects}
       12    0.000    0.000    0.001    0.000 {method 'any' of 'numpy.ndarray' objects}
       43    0.000    0.000    0.000    0.000 {method 'append' of 'list' objects}
        2    0.007    0.004    0.007    0.004 {method 'argsort' of 'numpy.ndarray' objects}
        6    0.092    0.015    0.092    0.015 {method 'astype' of 'numpy.ndarray' objects}
        2    0.000    0.000    0.000    0.000 {method 'close' of '_io.TextIOWrapper' objects}
        1    0.001    0.001    0.001    0.001 {method 'close' of 'pandas._libs.parsers.TextReader' objects}
        2    0.000    0.000    0.000    0.000 {method 'copy' of 'dict' objects}
        4    0.000    0.000    0.000    0.000 {method 'copy' of 'numpy.ndarray' objects}
        1    0.000    0.000    0.000    0.000 {method 'disable' of '_lsprof.Profiler' objects}
        1    0.000    0.000    0.000    0.000 {method 'encode' of 'str' objects}
        8    0.000    0.000    0.000    0.000 {method 'endswith' of 'str' objects}
        4    0.000    0.000    0.000    0.000 {method 'extend' of 'list' objects}
        2    0.000    0.000    0.000    0.000 {method 'fill' of 'numpy.ndarray' objects}
       21    0.000    0.000    0.000    0.000 {method 'format' of 'str' objects}
       80    0.000    0.000    0.000    0.000 {method 'get' of 'dict' objects}
        1    0.000    0.000    0.000    0.000 {method 'get_indexer' of 'pandas._libs.index.IndexEngine' objects}
        3    0.000    0.000    0.000    0.000 {method 'index' of 'list' objects}
       11    0.000    0.000    0.000    0.000 {method 'items' of 'dict' objects}
       56    0.000    0.000    0.000    0.000 {method 'join' of 'str' objects}
        1    0.000    0.000    0.000    0.000 {method 'keys' of 'dict' objects}
       11    0.000    0.000    0.000    0.000 {method 'lower' of 'str' objects}
        2    0.000    0.000    0.000    0.000 {method 'match' of 're.Pattern' objects}
        1    0.000    0.000    0.000    0.000 {method 'normalize' of 'pandas._libs.tslibs.timestamps._Timestamp' objects}
       20    0.000    0.000    0.000    0.000 {method 'pop' of 'dict' objects}
        2    0.000    0.000    0.000    0.000 {method 'pop' of 'list' objects}
        7    0.000    0.000    0.000    0.000 {method 'ravel' of 'numpy.ndarray' objects}
        1    1.325    1.325    1.369    1.369 {method 'read' of 'pandas._libs.parsers.TextReader' objects}
       21    0.001    0.000    0.001    0.000 {method 'reduce' of 'numpy.ufunc' objects}
        1    0.000    0.000    0.000    0.000 {method 'remove' of 'list' objects}
        1    0.005    0.005    0.005    0.005 {method 'repeat' of 'numpy.ndarray' objects}
        3    0.000    0.000    0.000    0.000 {method 'reshape' of 'numpy.ndarray' objects}
       12    0.000    0.000    0.000    0.000 {method 'rpartition' of 'str' objects}
      110    0.000    0.000    0.000    0.000 {method 'rstrip' of 'str' objects}
        2    0.000    0.000    0.000    0.000 {method 'search' of 're.Pattern' objects}
        1    0.000    0.000    0.000    0.000 {method 'set_noconvert' of 'pandas._libs.parsers.TextReader' objects}
        2    0.000    0.000    0.000    0.000 {method 'sort' of 'numpy.ndarray' objects}
        2    0.000    0.000    0.000    0.000 {method 'split' of 're.Pattern' objects}
       19    0.000    0.000    0.000    0.000 {method 'startswith' of 'str' objects}
        1    0.000    0.000    0.000    0.000 {method 'sum' of 'numpy.ndarray' objects}
        2    0.000    0.000    0.000    0.000 {method 'swapaxes' of 'numpy.ndarray' objects}
        6    0.022    0.004    0.022    0.004 {method 'take' of 'numpy.ndarray' objects}
        1    0.000    0.000    0.000    0.000 {method 'time' of 'datetime.datetime' objects}
        2    0.000    0.000    0.000    0.000 {method 'update' of 'dict' objects}
       13    0.000    0.000    0.000    0.000 {method 'upper' of 'str' objects}
       67    0.000    0.000    0.000    0.000 {method 'view' of 'numpy.ndarray' objects}
        1    0.000    0.000    0.000    0.000 {method 'writerow' of '_csv.writer' objects}
        2    0.012    0.006    0.012    0.006 {pandas._libs.algos.ensure_float64}
       13    0.000    0.000    0.000    0.000 {pandas._libs.algos.ensure_int64}
        9    0.000    0.000    0.000    0.000 {pandas._libs.algos.ensure_object}
       14    0.000    0.000    0.000    0.000 {pandas._libs.algos.ensure_platform_int}
        1    0.000    0.000    0.000    0.000 {pandas._libs.algos.take_1d_object_object}
        2    0.028    0.014    0.028    0.014 {pandas._libs.algos.take_2d_axis1_float64_float64}
        2    0.034    0.017    0.034    0.017 {pandas._libs.algos.take_2d_axis1_int64_int64}
        2    0.021    0.010    0.021    0.010 {pandas._libs.algos.take_2d_axis1_object_object}
        1    0.000    0.000    0.000    0.000 {pandas._libs.lib.array_equivalent_object}
        3    0.000    0.000    0.000    0.000 {pandas._libs.lib.clean_index_list}
        1    0.001    0.001    0.001    0.001 {pandas._libs.lib.generate_bins_dt64}
        1    0.000    0.000    0.000    0.000 {pandas._libs.lib.get_reverse_indexer}
        2    0.000    0.000    0.000    0.000 {pandas._libs.lib.infer_datetimelike_array}
        8    0.022    0.003    0.022    0.003 {pandas._libs.lib.infer_dtype}
        5    0.000    0.000    0.000    0.000 {pandas._libs.lib.is_bool}
       19    0.000    0.000    0.000    0.000 {pandas._libs.lib.is_float}
        8    0.000    0.000    0.000    0.000 {pandas._libs.lib.is_integer}
        8    0.000    0.000    0.000    0.000 {pandas._libs.lib.is_iterator}
       37    0.000    0.000    0.000    0.000 {pandas._libs.lib.is_list_like}
       51    0.000    0.000    0.000    0.000 {pandas._libs.lib.is_scalar}
        4    0.004    0.001    0.004    0.001 {pandas._libs.lib.maybe_indices_to_slice}
        1    0.022    0.022    0.023    0.023 {pandas._libs.tslib.format_array_from_datetime}
        1    0.017    0.017    0.017    0.017 {pandas._libs.tslibs.parsing.concat_date_cols}
        1    0.000    0.000    0.000    0.000 {pandas._libs.tslibs.timezones.infer_tzinfo}
        1    0.099    0.099    0.099    0.099 {pandas._libs.writers.write_csv_rows}

